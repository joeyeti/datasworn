# Code generated by jtd-codegen for Ruby Type Signatures v0.1.1

module Datasworn

  class RulesPackage
    attr_accessor type: String

    def self.from_json_data: (untyped) -> RulesPackage
    def to_json_data: () -> untyped
  end

  class RulesPackageExpansionDataswornVersion
    attr_accessor value: String

    DEFAULT_NAME: RulesPackageExpansionDataswornVersion

    def self.from_json_data: (untyped) -> RulesPackageExpansionDataswornVersion
    def to_json_data: () -> untyped
  end

  class RulesPackageExpansion < RulesPackage
    attr_accessor id: ExpansionID
    attr_accessor assets: Hash[String, AssetCollection]
    attr_accessor authors: Array[AuthorInfo]
    attr_accessor datasworn_version: RulesPackageExpansionDataswornVersion
    attr_accessor date: DateTime
    attr_accessor license: WebURL
    attr_accessor moves: Hash[String, MoveCategory]
    attr_accessor oracles: Hash[String, OracleTablesCollection]
    attr_accessor ruleset: RulesetID
    attr_accessor title: Label
    attr_accessor url: WebURL
    attr_accessor atlas: Hash[String, AtlasCollection]?
    attr_accessor delve_sites: Hash[String, DelveSite]?
    attr_accessor description: MarkdownString?
    attr_accessor npcs: Hash[String, NpcCollection]?
    attr_accessor rarities: Hash[String, Rarity]?
    attr_accessor rules: RulesExpansion?
    attr_accessor site_domains: Hash[String, DelveSiteDomain]?
    attr_accessor site_themes: Hash[String, DelveSiteTheme]?
    attr_accessor truths: Hash[String, Truth]?

    def self.from_json_data: (untyped) -> RulesPackageExpansion
    def to_json_data: () -> untyped
  end

  class RulesPackageRulesetDataswornVersion
    attr_accessor value: String

    DEFAULT_NAME: RulesPackageRulesetDataswornVersion

    def self.from_json_data: (untyped) -> RulesPackageRulesetDataswornVersion
    def to_json_data: () -> untyped
  end

  class RulesPackageRuleset < RulesPackage
    attr_accessor id: RulesetID
    attr_accessor assets: Hash[String, AssetCollection]
    attr_accessor authors: Array[AuthorInfo]
    attr_accessor datasworn_version: RulesPackageRulesetDataswornVersion
    attr_accessor date: DateTime
    attr_accessor license: WebURL
    attr_accessor moves: Hash[String, MoveCategory]
    attr_accessor oracles: Hash[String, OracleTablesCollection]
    attr_accessor rules: Rules
    attr_accessor title: Label
    attr_accessor url: WebURL
    attr_accessor atlas: Hash[String, AtlasCollection]?
    attr_accessor delve_sites: Hash[String, DelveSite]?
    attr_accessor description: MarkdownString?
    attr_accessor npcs: Hash[String, NpcCollection]?
    attr_accessor rarities: Hash[String, Rarity]?
    attr_accessor site_domains: Hash[String, DelveSiteDomain]?
    attr_accessor site_themes: Hash[String, DelveSiteTheme]?
    attr_accessor truths: Hash[String, Truth]?

    def self.from_json_data: (untyped) -> RulesPackageRuleset
    def to_json_data: () -> untyped
  end

  class ActionRollMethod
    attr_accessor value: String

    ALL: ActionRollMethod
    HIGHEST: ActionRollMethod
    LOWEST: ActionRollMethod
    MISS: ActionRollMethod
    PLAYER_CHOICE: ActionRollMethod
    STRONG_HIT: ActionRollMethod
    WEAK_HIT: ActionRollMethod

    def self.from_json_data: (untyped) -> ActionRollMethod
    def to_json_data: () -> untyped
  end

  class AnyID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AnyID
    def to_json_data: () -> untyped
  end

  class AnyIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AnyIDWildcard
    def to_json_data: () -> untyped
  end

  class AnyMoveID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AnyMoveID
    def to_json_data: () -> untyped
  end

  class AnyMoveIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AnyMoveIDWildcard
    def to_json_data: () -> untyped
  end

  class AnyOracleRollableID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AnyOracleRollableID
    def to_json_data: () -> untyped
  end

  class AnyOracleRollableIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AnyOracleRollableIDWildcard
    def to_json_data: () -> untyped
  end

  class AnyOracleRollableRowID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AnyOracleRollableRowID
    def to_json_data: () -> untyped
  end

  class AnyOracleRollableRowIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AnyOracleRollableRowIDWildcard
    def to_json_data: () -> untyped
  end

  class AssetType
    attr_accessor value: String

    ASSET: AssetType

    def self.from_json_data: (untyped) -> AssetType
    def to_json_data: () -> untyped
  end

  class Asset
    attr_accessor id: AssetID
    attr_accessor source: SourceInfo
    attr_accessor abilities: Array[AssetAbility]
    attr_accessor category: Label
    attr_accessor count_as_impact: bool
    attr_accessor name: Label
    attr_accessor options: Hash[String, AssetOptionField]
    attr_accessor shared: bool
    attr_accessor type: AssetType
    attr_accessor comment: Documentation?
    attr_accessor attachments: AssetAttachment?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor controls: Hash[String, AssetControlField]?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[AssetIDWildcard]?
    attr_accessor requirement: MarkdownString?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> Asset
    def to_json_data: () -> untyped
  end

  class AssetAbility
    attr_accessor id: AssetAbilityID
    attr_accessor enabled: bool
    attr_accessor text: MarkdownString
    attr_accessor comment: Documentation?
    attr_accessor controls: Hash[String, AssetAbilityControlField]?
    attr_accessor enhance_asset: AssetEnhancement?
    attr_accessor enhance_moves: Array[MoveEnhancement]?
    attr_accessor moves: Hash[String, EmbeddedMove]?
    attr_accessor name: Label?
    attr_accessor options: Hash[String, AssetAbilityOptionField]?
    attr_accessor oracles: Hash[String, EmbeddedOracleRollable]?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> AssetAbility
    def to_json_data: () -> untyped
  end

  class AssetAbilityControlField
    attr_accessor field_type: String

    def self.from_json_data: (untyped) -> AssetAbilityControlField
    def to_json_data: () -> untyped
  end

  class AssetAbilityControlFieldCheckbox < AssetAbilityControlField
    attr_accessor disables_asset: bool
    attr_accessor is_impact: bool
    attr_accessor label: Label
    attr_accessor value: bool
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetAbilityControlFieldCheckbox
    def to_json_data: () -> untyped
  end

  class AssetAbilityControlFieldClock < AssetAbilityControlField
    attr_accessor label: Label
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor rollable: bool
    attr_accessor value: Integer
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetAbilityControlFieldClock
    def to_json_data: () -> untyped
  end

  class AssetAbilityControlFieldCounter < AssetAbilityControlField
    attr_accessor label: Label
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor rollable: bool
    attr_accessor value: Integer
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetAbilityControlFieldCounter
    def to_json_data: () -> untyped
  end

  class AssetAbilityControlFieldText < AssetAbilityControlField
    attr_accessor label: Label
    attr_accessor value: String
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetAbilityControlFieldText
    def to_json_data: () -> untyped
  end

  class AssetAbilityID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetAbilityID
    def to_json_data: () -> untyped
  end

  class AssetAbilityIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetAbilityIDWildcard
    def to_json_data: () -> untyped
  end

  class AssetAbilityMoveID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetAbilityMoveID
    def to_json_data: () -> untyped
  end

  class AssetAbilityMoveIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetAbilityMoveIDWildcard
    def to_json_data: () -> untyped
  end

  class AssetAbilityOptionField
    attr_accessor field_type: String

    def self.from_json_data: (untyped) -> AssetAbilityOptionField
    def to_json_data: () -> untyped
  end

  class AssetAbilityOptionFieldText < AssetAbilityOptionField
    attr_accessor label: Label
    attr_accessor value: String
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetAbilityOptionFieldText
    def to_json_data: () -> untyped
  end

  class AssetAbilityOracleRollableID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetAbilityOracleRollableID
    def to_json_data: () -> untyped
  end

  class AssetAbilityOracleRollableIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetAbilityOracleRollableIDWildcard
    def to_json_data: () -> untyped
  end

  class AssetAbilityOracleRollableRowID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetAbilityOracleRollableRowID
    def to_json_data: () -> untyped
  end

  class AssetAbilityOracleRollableRowIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetAbilityOracleRollableRowIDWildcard
    def to_json_data: () -> untyped
  end

  class AssetAttachment
    attr_accessor assets: Array[AssetIDWildcard]
    attr_accessor max: Integer

    def self.from_json_data: (untyped) -> AssetAttachment
    def to_json_data: () -> untyped
  end

  class AssetCardFlipFieldFieldType
    attr_accessor value: String

    CARD_FLIP: AssetCardFlipFieldFieldType

    def self.from_json_data: (untyped) -> AssetCardFlipFieldFieldType
    def to_json_data: () -> untyped
  end

  class AssetCardFlipField
    attr_accessor disables_asset: bool
    attr_accessor field_type: AssetCardFlipFieldFieldType
    attr_accessor is_impact: bool
    attr_accessor label: Label
    attr_accessor value: bool
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetCardFlipField
    def to_json_data: () -> untyped
  end

  class AssetCheckboxFieldFieldType
    attr_accessor value: String

    CHECKBOX: AssetCheckboxFieldFieldType

    def self.from_json_data: (untyped) -> AssetCheckboxFieldFieldType
    def to_json_data: () -> untyped
  end

  class AssetCheckboxField
    attr_accessor disables_asset: bool
    attr_accessor field_type: AssetCheckboxFieldFieldType
    attr_accessor is_impact: bool
    attr_accessor label: Label
    attr_accessor value: bool
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetCheckboxField
    def to_json_data: () -> untyped
  end

  class AssetCollectionType
    attr_accessor value: String

    ASSET_COLLECTION: AssetCollectionType

    def self.from_json_data: (untyped) -> AssetCollectionType
    def to_json_data: () -> untyped
  end

  class AssetCollection
    attr_accessor id: AssetCollectionID
    attr_accessor source: SourceInfo
    attr_accessor collections: Hash[String, AssetCollection]
    attr_accessor contents: Hash[String, Asset]
    attr_accessor name: Label
    attr_accessor type: AssetCollectionType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: Array[AssetCollectionIDWildcard]?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[AssetCollectionIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> AssetCollection
    def to_json_data: () -> untyped
  end

  class AssetCollectionID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetCollectionID
    def to_json_data: () -> untyped
  end

  class AssetCollectionIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetCollectionIDWildcard
    def to_json_data: () -> untyped
  end

  class AssetConditionMeterFieldType
    attr_accessor value: String

    CONDITION_METER: AssetConditionMeterFieldType

    def self.from_json_data: (untyped) -> AssetConditionMeterFieldType
    def to_json_data: () -> untyped
  end

  class AssetConditionMeterMoves
    attr_accessor recover: Array[AnyMoveIDWildcard]?
    attr_accessor suffer: Array[AnyMoveIDWildcard]?

    def self.from_json_data: (untyped) -> AssetConditionMeterMoves
    def to_json_data: () -> untyped
  end

  class AssetConditionMeter
    attr_accessor controls: Hash[String, AssetConditionMeterControlField]
    attr_accessor field_type: AssetConditionMeterFieldType
    attr_accessor label: Label
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor rollable: bool
    attr_accessor value: Integer
    attr_accessor icon: SvgImageURL?
    attr_accessor moves: AssetConditionMeterMoves?

    def self.from_json_data: (untyped) -> AssetConditionMeter
    def to_json_data: () -> untyped
  end

  class AssetConditionMeterControlField
    attr_accessor field_type: String

    def self.from_json_data: (untyped) -> AssetConditionMeterControlField
    def to_json_data: () -> untyped
  end

  class AssetConditionMeterControlFieldCardFlip < AssetConditionMeterControlField
    attr_accessor disables_asset: bool
    attr_accessor is_impact: bool
    attr_accessor label: Label
    attr_accessor value: bool
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetConditionMeterControlFieldCardFlip
    def to_json_data: () -> untyped
  end

  class AssetConditionMeterControlFieldCheckbox < AssetConditionMeterControlField
    attr_accessor disables_asset: bool
    attr_accessor is_impact: bool
    attr_accessor label: Label
    attr_accessor value: bool
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetConditionMeterControlFieldCheckbox
    def to_json_data: () -> untyped
  end

  class AssetConditionMeterEnhancementFieldType
    attr_accessor value: String

    CONDITION_METER: AssetConditionMeterEnhancementFieldType

    def self.from_json_data: (untyped) -> AssetConditionMeterEnhancementFieldType
    def to_json_data: () -> untyped
  end

  class AssetConditionMeterEnhancement
    attr_accessor field_type: AssetConditionMeterEnhancementFieldType
    attr_accessor max: Integer

    def self.from_json_data: (untyped) -> AssetConditionMeterEnhancement
    def to_json_data: () -> untyped
  end

  class AssetControlField
    attr_accessor field_type: String

    def self.from_json_data: (untyped) -> AssetControlField
    def to_json_data: () -> untyped
  end

  class AssetControlFieldCardFlip < AssetControlField
    attr_accessor disables_asset: bool
    attr_accessor is_impact: bool
    attr_accessor label: Label
    attr_accessor value: bool
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetControlFieldCardFlip
    def to_json_data: () -> untyped
  end

  class AssetControlFieldCheckbox < AssetControlField
    attr_accessor disables_asset: bool
    attr_accessor is_impact: bool
    attr_accessor label: Label
    attr_accessor value: bool
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetControlFieldCheckbox
    def to_json_data: () -> untyped
  end

  class AssetControlFieldConditionMeterMoves
    attr_accessor recover: Array[AnyMoveIDWildcard]?
    attr_accessor suffer: Array[AnyMoveIDWildcard]?

    def self.from_json_data: (untyped) -> AssetControlFieldConditionMeterMoves
    def to_json_data: () -> untyped
  end

  class AssetControlFieldConditionMeter < AssetControlField
    attr_accessor controls: Hash[String, AssetConditionMeterControlField]
    attr_accessor label: Label
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor rollable: bool
    attr_accessor value: Integer
    attr_accessor icon: SvgImageURL?
    attr_accessor moves: AssetControlFieldConditionMeterMoves?

    def self.from_json_data: (untyped) -> AssetControlFieldConditionMeter
    def to_json_data: () -> untyped
  end

  class AssetControlFieldSelectEnhancementChoice
    attr_accessor choice_type: String

    def self.from_json_data: (untyped) -> AssetControlFieldSelectEnhancementChoice
    def to_json_data: () -> untyped
  end

  class AssetControlFieldSelectEnhancementChoiceChoice < AssetControlFieldSelectEnhancementChoice
    attr_accessor label: Label
    attr_accessor enhance_asset: AssetEnhancement?
    attr_accessor enhance_moves: Array[MoveEnhancement]?

    def self.from_json_data: (untyped) -> AssetControlFieldSelectEnhancementChoiceChoice
    def to_json_data: () -> untyped
  end

  class AssetControlFieldSelectEnhancementChoiceChoiceGroup < AssetControlFieldSelectEnhancementChoice
    attr_accessor choices: Hash[String, SelectEnhancementFieldChoice]
    attr_accessor name: Label

    def self.from_json_data: (untyped) -> AssetControlFieldSelectEnhancementChoiceChoiceGroup
    def to_json_data: () -> untyped
  end

  class AssetControlFieldSelectEnhancement < AssetControlField
    attr_accessor choices: Hash[String, AssetControlFieldSelectEnhancementChoice]
    attr_accessor label: Label
    attr_accessor value: DictKey
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetControlFieldSelectEnhancement
    def to_json_data: () -> untyped
  end

  class AssetControlFieldEnhancement
    attr_accessor field_type: String

    def self.from_json_data: (untyped) -> AssetControlFieldEnhancement
    def to_json_data: () -> untyped
  end

  class AssetControlFieldEnhancementConditionMeter < AssetControlFieldEnhancement
    attr_accessor max: Integer

    def self.from_json_data: (untyped) -> AssetControlFieldEnhancementConditionMeter
    def to_json_data: () -> untyped
  end

  class AssetControlValueRefUsing
    attr_accessor value: String

    ASSET_CONTROL: AssetControlValueRefUsing

    def self.from_json_data: (untyped) -> AssetControlValueRefUsing
    def to_json_data: () -> untyped
  end

  class AssetControlValueRef
    attr_accessor assets: Array[AssetIDWildcard]
    attr_accessor control: DictKey
    attr_accessor using: AssetControlValueRefUsing

    def self.from_json_data: (untyped) -> AssetControlValueRef
    def to_json_data: () -> untyped
  end

  class AssetEnhancement
    attr_accessor attachments: AssetAttachment?
    attr_accessor controls: Hash[String, AssetControlFieldEnhancement]?
    attr_accessor count_as_impact: bool?
    attr_accessor shared: bool?
    attr_accessor suggestions: Suggestions?

    def self.from_json_data: (untyped) -> AssetEnhancement
    def to_json_data: () -> untyped
  end

  class AssetID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetID
    def to_json_data: () -> untyped
  end

  class AssetIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetIDWildcard
    def to_json_data: () -> untyped
  end

  class AssetOptionField
    attr_accessor field_type: String

    def self.from_json_data: (untyped) -> AssetOptionField
    def to_json_data: () -> untyped
  end

  class AssetOptionFieldSelectEnhancementChoice
    attr_accessor choice_type: String

    def self.from_json_data: (untyped) -> AssetOptionFieldSelectEnhancementChoice
    def to_json_data: () -> untyped
  end

  class AssetOptionFieldSelectEnhancementChoiceChoice < AssetOptionFieldSelectEnhancementChoice
    attr_accessor label: Label
    attr_accessor enhance_asset: AssetEnhancement?
    attr_accessor enhance_moves: Array[MoveEnhancement]?

    def self.from_json_data: (untyped) -> AssetOptionFieldSelectEnhancementChoiceChoice
    def to_json_data: () -> untyped
  end

  class AssetOptionFieldSelectEnhancementChoiceChoiceGroup < AssetOptionFieldSelectEnhancementChoice
    attr_accessor choices: Hash[String, SelectEnhancementFieldChoice]
    attr_accessor name: Label

    def self.from_json_data: (untyped) -> AssetOptionFieldSelectEnhancementChoiceChoiceGroup
    def to_json_data: () -> untyped
  end

  class AssetOptionFieldSelectEnhancement < AssetOptionField
    attr_accessor choices: Hash[String, AssetOptionFieldSelectEnhancementChoice]
    attr_accessor label: Label
    attr_accessor value: DictKey
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetOptionFieldSelectEnhancement
    def to_json_data: () -> untyped
  end

  class AssetOptionFieldSelectValue < AssetOptionField
    attr_accessor choices: Hash[String, SelectValueFieldChoice]
    attr_accessor label: Label
    attr_accessor value: DictKey
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetOptionFieldSelectValue
    def to_json_data: () -> untyped
  end

  class AssetOptionFieldText < AssetOptionField
    attr_accessor label: Label
    attr_accessor value: String
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetOptionFieldText
    def to_json_data: () -> untyped
  end

  class AssetOptionValueRefUsing
    attr_accessor value: String

    ASSET_OPTION: AssetOptionValueRefUsing

    def self.from_json_data: (untyped) -> AssetOptionValueRefUsing
    def to_json_data: () -> untyped
  end

  class AssetOptionValueRef
    attr_accessor assets: Array[AssetIDWildcard]
    attr_accessor option: DictKey
    attr_accessor using: AssetOptionValueRefUsing

    def self.from_json_data: (untyped) -> AssetOptionValueRef
    def to_json_data: () -> untyped
  end

  class AtlasCollectionType
    attr_accessor value: String

    ATLAS_COLLECTION: AtlasCollectionType

    def self.from_json_data: (untyped) -> AtlasCollectionType
    def to_json_data: () -> untyped
  end

  class AtlasCollection
    attr_accessor id: AtlasCollectionID
    attr_accessor source: SourceInfo
    attr_accessor collections: Hash[String, AtlasCollection]
    attr_accessor contents: Hash[String, AtlasEntry]
    attr_accessor name: Label
    attr_accessor type: AtlasCollectionType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: Array[AtlasCollectionIDWildcard]?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[AtlasCollectionIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> AtlasCollection
    def to_json_data: () -> untyped
  end

  class AtlasCollectionID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AtlasCollectionID
    def to_json_data: () -> untyped
  end

  class AtlasCollectionIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AtlasCollectionIDWildcard
    def to_json_data: () -> untyped
  end

  class AtlasEntryType
    attr_accessor value: String

    ATLAS_ENTRY: AtlasEntryType

    def self.from_json_data: (untyped) -> AtlasEntryType
    def to_json_data: () -> untyped
  end

  class AtlasEntry
    attr_accessor id: AtlasEntryID
    attr_accessor source: SourceInfo
    attr_accessor description: MarkdownString
    attr_accessor features: Array[MarkdownString]
    attr_accessor name: Label
    attr_accessor type: AtlasEntryType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor quest_starter: MarkdownString?
    attr_accessor replaces: Array[AtlasEntryIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Tags?
    attr_accessor your_truth: MarkdownString?

    def self.from_json_data: (untyped) -> AtlasEntry
    def to_json_data: () -> untyped
  end

  class AtlasEntryID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AtlasEntryID
    def to_json_data: () -> untyped
  end

  class AtlasEntryIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AtlasEntryIDWildcard
    def to_json_data: () -> untyped
  end

  class AttachedAssetControlValueRefUsing
    attr_accessor value: String

    ATTACHED_ASSET_CONTROL: AttachedAssetControlValueRefUsing

    def self.from_json_data: (untyped) -> AttachedAssetControlValueRefUsing
    def to_json_data: () -> untyped
  end

  class AttachedAssetControlValueRef
    attr_accessor control: DictKey
    attr_accessor using: AttachedAssetControlValueRefUsing

    def self.from_json_data: (untyped) -> AttachedAssetControlValueRef
    def to_json_data: () -> untyped
  end

  class AttachedAssetOptionValueRefUsing
    attr_accessor value: String

    ATTACHED_ASSET_OPTION: AttachedAssetOptionValueRefUsing

    def self.from_json_data: (untyped) -> AttachedAssetOptionValueRefUsing
    def to_json_data: () -> untyped
  end

  class AttachedAssetOptionValueRef
    attr_accessor option: DictKey
    attr_accessor using: AttachedAssetOptionValueRefUsing

    def self.from_json_data: (untyped) -> AttachedAssetOptionValueRef
    def to_json_data: () -> untyped
  end

  class AuthorInfo
    attr_accessor name: Label
    attr_accessor email: Email?
    attr_accessor url: WebURL?

    def self.from_json_data: (untyped) -> AuthorInfo
    def to_json_data: () -> untyped
  end

  class ChallengeRank
    attr_accessor value: Integer

    def self.from_json_data: (untyped) -> ChallengeRank
    def to_json_data: () -> untyped
  end

  class ClockFieldFieldType
    attr_accessor value: String

    CLOCK: ClockFieldFieldType

    def self.from_json_data: (untyped) -> ClockFieldFieldType
    def to_json_data: () -> untyped
  end

  class ClockField
    attr_accessor field_type: ClockFieldFieldType
    attr_accessor label: Label
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor rollable: bool
    attr_accessor value: Integer
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> ClockField
    def to_json_data: () -> untyped
  end

  class CollectableType
    attr_accessor value: String

    ASSET: CollectableType
    ATLAS_ENTRY: CollectableType
    MOVE: CollectableType
    NPC: CollectableType
    ORACLE_ROLLABLE: CollectableType

    def self.from_json_data: (untyped) -> CollectableType
    def to_json_data: () -> untyped
  end

  class CollectionType
    attr_accessor value: String

    ASSET_COLLECTION: CollectionType
    ATLAS_COLLECTION: CollectionType
    MOVE_CATEGORY: CollectionType
    NPC_COLLECTION: CollectionType
    ORACLE_COLLECTION: CollectionType

    def self.from_json_data: (untyped) -> CollectionType
    def to_json_data: () -> untyped
  end

  class ConditionMeterFieldFieldType
    attr_accessor value: String

    CONDITION_METER: ConditionMeterFieldFieldType

    def self.from_json_data: (untyped) -> ConditionMeterFieldFieldType
    def to_json_data: () -> untyped
  end

  class ConditionMeterField
    attr_accessor field_type: ConditionMeterFieldFieldType
    attr_accessor label: Label
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor rollable: bool
    attr_accessor value: Integer
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> ConditionMeterField
    def to_json_data: () -> untyped
  end

  class ConditionMeterKey
    attr_accessor value: DictKey

    def self.from_json_data: (untyped) -> ConditionMeterKey
    def to_json_data: () -> untyped
  end

  class ConditionMeterRule
    attr_accessor description: MarkdownString
    attr_accessor label: Label
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor rollable: bool
    attr_accessor shared: bool
    attr_accessor value: Integer

    def self.from_json_data: (untyped) -> ConditionMeterRule
    def to_json_data: () -> untyped
  end

  class ConditionMeterValueRefUsing
    attr_accessor value: String

    CONDITION_METER: ConditionMeterValueRefUsing

    def self.from_json_data: (untyped) -> ConditionMeterValueRefUsing
    def to_json_data: () -> untyped
  end

  class ConditionMeterValueRef
    attr_accessor condition_meter: ConditionMeterKey
    attr_accessor using: ConditionMeterValueRefUsing

    def self.from_json_data: (untyped) -> ConditionMeterValueRef
    def to_json_data: () -> untyped
  end

  class CoreTags
    attr_accessor requires_allies: bool?
    attr_accessor supernatural: bool?
    attr_accessor technological: bool?

    def self.from_json_data: (untyped) -> CoreTags
    def to_json_data: () -> untyped
  end

  class CounterFieldFieldType
    attr_accessor value: String

    COUNTER: CounterFieldFieldType

    def self.from_json_data: (untyped) -> CounterFieldFieldType
    def to_json_data: () -> untyped
  end

  class CounterField
    attr_accessor field_type: CounterFieldFieldType
    attr_accessor label: Label
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor rollable: bool
    attr_accessor value: Integer
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> CounterField
    def to_json_data: () -> untyped
  end

  class CSSColor
    attr_accessor value: String

    def self.from_json_data: (untyped) -> CSSColor
    def to_json_data: () -> untyped
  end

  class CustomValueUsing
    attr_accessor value: String

    CUSTOM: CustomValueUsing

    def self.from_json_data: (untyped) -> CustomValueUsing
    def to_json_data: () -> untyped
  end

  class CustomValue
    attr_accessor label: Label
    attr_accessor using: CustomValueUsing
    attr_accessor value: Integer

    def self.from_json_data: (untyped) -> CustomValue
    def to_json_data: () -> untyped
  end

  class DelveSiteType
    attr_accessor value: String

    DELVE_SITE: DelveSiteType

    def self.from_json_data: (untyped) -> DelveSiteType
    def to_json_data: () -> untyped
  end

  class DelveSite
    attr_accessor id: DelveSiteID
    attr_accessor source: SourceInfo
    attr_accessor denizens: Array[DelveSiteDenizen]
    attr_accessor description: MarkdownString
    attr_accessor domain: DelveSiteDomainID
    attr_accessor name: Label
    attr_accessor rank: ChallengeRank
    attr_accessor theme: DelveSiteThemeID
    attr_accessor type: DelveSiteType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor extra_card: String?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor region: AtlasEntryID?
    attr_accessor replaces: Array[DelveSiteIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> DelveSite
    def to_json_data: () -> untyped
  end

  class DelveSiteDenizen
    attr_accessor id: DelveSiteDenizenID
    attr_accessor frequency: DelveSiteDenizenFrequency
    attr_accessor roll: DiceRange
    attr_accessor name: Label?
    attr_accessor npc: NpcID?

    def self.from_json_data: (untyped) -> DelveSiteDenizen
    def to_json_data: () -> untyped
  end

  class DelveSiteDenizenFrequency
    attr_accessor value: String

    COMMON: DelveSiteDenizenFrequency
    RARE: DelveSiteDenizenFrequency
    UNCOMMON: DelveSiteDenizenFrequency
    UNFORESEEN: DelveSiteDenizenFrequency
    VERY_COMMON: DelveSiteDenizenFrequency

    def self.from_json_data: (untyped) -> DelveSiteDenizenFrequency
    def to_json_data: () -> untyped
  end

  class DelveSiteDenizenID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteDenizenID
    def to_json_data: () -> untyped
  end

  class DelveSiteDenizenIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteDenizenIDWildcard
    def to_json_data: () -> untyped
  end

  class DelveSiteDomainType
    attr_accessor value: String

    DELVE_SITE_DOMAIN: DelveSiteDomainType

    def self.from_json_data: (untyped) -> DelveSiteDomainType
    def to_json_data: () -> untyped
  end

  class DelveSiteDomain
    attr_accessor id: DelveSiteDomainID
    attr_accessor source: SourceInfo
    attr_accessor dangers: Array[DelveSiteDomainDanger]
    attr_accessor features: Array[DelveSiteDomainFeature]
    attr_accessor name: Label
    attr_accessor summary: MarkdownString
    attr_accessor type: DelveSiteDomainType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor descriptipn: MarkdownString?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor name_oracle: OracleRollableID?
    attr_accessor replaces: Array[DelveSiteDomainIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> DelveSiteDomain
    def to_json_data: () -> untyped
  end

  class DelveSiteDomainDanger
    attr_accessor id: DelveSiteDomainDangerID
    attr_accessor roll: DiceRange
    attr_accessor text: MarkdownString
    attr_accessor i18n: I18nHints?
    attr_accessor embed_table: OracleRollableID?
    attr_accessor icon: SvgImageURL?
    attr_accessor oracle_rolls: Array[OracleRoll]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?
    attr_accessor template: OracleRollTemplate?

    def self.from_json_data: (untyped) -> DelveSiteDomainDanger
    def to_json_data: () -> untyped
  end

  class DelveSiteDomainDangerID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteDomainDangerID
    def to_json_data: () -> untyped
  end

  class DelveSiteDomainDangerIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteDomainDangerIDWildcard
    def to_json_data: () -> untyped
  end

  class DelveSiteDomainFeature
    attr_accessor id: DelveSiteDomainFeatureID
    attr_accessor roll: DiceRange
    attr_accessor text: MarkdownString
    attr_accessor i18n: I18nHints?
    attr_accessor embed_table: OracleRollableID?
    attr_accessor icon: SvgImageURL?
    attr_accessor oracle_rolls: Array[OracleRoll]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?
    attr_accessor template: OracleRollTemplate?

    def self.from_json_data: (untyped) -> DelveSiteDomainFeature
    def to_json_data: () -> untyped
  end

  class DelveSiteDomainFeatureID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteDomainFeatureID
    def to_json_data: () -> untyped
  end

  class DelveSiteDomainFeatureIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteDomainFeatureIDWildcard
    def to_json_data: () -> untyped
  end

  class DelveSiteDomainID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteDomainID
    def to_json_data: () -> untyped
  end

  class DelveSiteDomainIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteDomainIDWildcard
    def to_json_data: () -> untyped
  end

  class DelveSiteID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteID
    def to_json_data: () -> untyped
  end

  class DelveSiteIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteIDWildcard
    def to_json_data: () -> untyped
  end

  class DelveSiteThemeType
    attr_accessor value: String

    DELVE_SITE_THEME: DelveSiteThemeType

    def self.from_json_data: (untyped) -> DelveSiteThemeType
    def to_json_data: () -> untyped
  end

  class DelveSiteTheme
    attr_accessor id: DelveSiteThemeID
    attr_accessor source: SourceInfo
    attr_accessor dangers: Array[DelveSiteThemeDanger]
    attr_accessor features: Array[DelveSiteThemeFeature]
    attr_accessor name: Label
    attr_accessor summary: MarkdownString
    attr_accessor type: DelveSiteThemeType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor descriptipn: MarkdownString?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[DelveSiteThemeIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> DelveSiteTheme
    def to_json_data: () -> untyped
  end

  class DelveSiteThemeDanger
    attr_accessor id: DelveSiteThemeDangerID
    attr_accessor roll: DiceRange
    attr_accessor text: MarkdownString
    attr_accessor i18n: I18nHints?
    attr_accessor embed_table: OracleRollableID?
    attr_accessor icon: SvgImageURL?
    attr_accessor oracle_rolls: Array[OracleRoll]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?
    attr_accessor template: OracleRollTemplate?

    def self.from_json_data: (untyped) -> DelveSiteThemeDanger
    def to_json_data: () -> untyped
  end

  class DelveSiteThemeDangerID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteThemeDangerID
    def to_json_data: () -> untyped
  end

  class DelveSiteThemeDangerIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteThemeDangerIDWildcard
    def to_json_data: () -> untyped
  end

  class DelveSiteThemeFeature
    attr_accessor id: DelveSiteThemeFeatureID
    attr_accessor roll: DiceRange
    attr_accessor text: MarkdownString
    attr_accessor i18n: I18nHints?
    attr_accessor embed_table: OracleRollableID?
    attr_accessor icon: SvgImageURL?
    attr_accessor oracle_rolls: Array[OracleRoll]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?
    attr_accessor template: OracleRollTemplate?

    def self.from_json_data: (untyped) -> DelveSiteThemeFeature
    def to_json_data: () -> untyped
  end

  class DelveSiteThemeFeatureID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteThemeFeatureID
    def to_json_data: () -> untyped
  end

  class DelveSiteThemeFeatureIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteThemeFeatureIDWildcard
    def to_json_data: () -> untyped
  end

  class DelveSiteThemeID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteThemeID
    def to_json_data: () -> untyped
  end

  class DelveSiteThemeIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteThemeIDWildcard
    def to_json_data: () -> untyped
  end

  class DiceExpression
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DiceExpression
    def to_json_data: () -> untyped
  end

  class DiceRange
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> DiceRange
    def to_json_data: () -> untyped
  end

  class DictKey
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DictKey
    def to_json_data: () -> untyped
  end

  class Documentation
    attr_accessor value: String

    def self.from_json_data: (untyped) -> Documentation
    def to_json_data: () -> untyped
  end

  class Email
    attr_accessor value: String

    def self.from_json_data: (untyped) -> Email
    def to_json_data: () -> untyped
  end

  class EmbedOnlyType
    attr_accessor value: String

    ABILITY: EmbedOnlyType
    DANGER: EmbedOnlyType
    DENIZEN: EmbedOnlyType
    FEATURE: EmbedOnlyType
    OPTION: EmbedOnlyType
    ROW: EmbedOnlyType
    VARIANT: EmbedOnlyType

    def self.from_json_data: (untyped) -> EmbedOnlyType
    def to_json_data: () -> untyped
  end

  class EmbeddedActionRollMoveRollType
    attr_accessor value: String

    ACTION_ROLL: EmbeddedActionRollMoveRollType

    def self.from_json_data: (untyped) -> EmbeddedActionRollMoveRollType
    def to_json_data: () -> untyped
  end

  class EmbeddedActionRollMoveType
    attr_accessor value: String

    MOVE: EmbeddedActionRollMoveType

    def self.from_json_data: (untyped) -> EmbeddedActionRollMoveType
    def to_json_data: () -> untyped
  end

  class EmbeddedActionRollMove
    attr_accessor id: EmbeddedMoveID
    attr_accessor allow_momentum_burn: bool
    attr_accessor name: Label
    attr_accessor outcomes: MoveOutcomes
    attr_accessor roll_type: EmbeddedActionRollMoveRollType
    attr_accessor text: MarkdownString
    attr_accessor trigger: TriggerActionRoll
    attr_accessor type: EmbeddedActionRollMoveType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedActionRollMove
    def to_json_data: () -> untyped
  end

  class EmbeddedMove
    attr_accessor roll_type: String

    def self.from_json_data: (untyped) -> EmbeddedMove
    def to_json_data: () -> untyped
  end

  class EmbeddedMoveActionRollType
    attr_accessor value: String

    MOVE: EmbeddedMoveActionRollType

    def self.from_json_data: (untyped) -> EmbeddedMoveActionRollType
    def to_json_data: () -> untyped
  end

  class EmbeddedMoveActionRoll < EmbeddedMove
    attr_accessor id: EmbeddedMoveID
    attr_accessor allow_momentum_burn: bool
    attr_accessor name: Label
    attr_accessor outcomes: MoveOutcomes
    attr_accessor text: MarkdownString
    attr_accessor trigger: TriggerActionRoll
    attr_accessor type: EmbeddedMoveActionRollType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedMoveActionRoll
    def to_json_data: () -> untyped
  end

  class EmbeddedMoveNoRollType
    attr_accessor value: String

    MOVE: EmbeddedMoveNoRollType

    def self.from_json_data: (untyped) -> EmbeddedMoveNoRollType
    def to_json_data: () -> untyped
  end

  class EmbeddedMoveNoRoll < EmbeddedMove
    attr_accessor id: EmbeddedMoveID
    attr_accessor allow_momentum_burn: bool
    attr_accessor name: Label
    attr_accessor text: MarkdownString
    attr_accessor trigger: TriggerNoRoll
    attr_accessor type: EmbeddedMoveNoRollType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedMoveNoRoll
    def to_json_data: () -> untyped
  end

  class EmbeddedMoveProgressRollType
    attr_accessor value: String

    MOVE: EmbeddedMoveProgressRollType

    def self.from_json_data: (untyped) -> EmbeddedMoveProgressRollType
    def to_json_data: () -> untyped
  end

  class EmbeddedMoveProgressRoll < EmbeddedMove
    attr_accessor id: EmbeddedMoveID
    attr_accessor allow_momentum_burn: bool
    attr_accessor name: Label
    attr_accessor outcomes: MoveOutcomes
    attr_accessor text: MarkdownString
    attr_accessor tracks: ProgressTrackTypeInfo
    attr_accessor trigger: TriggerProgressRoll
    attr_accessor type: EmbeddedMoveProgressRollType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedMoveProgressRoll
    def to_json_data: () -> untyped
  end

  class EmbeddedMoveSpecialTrackType
    attr_accessor value: String

    MOVE: EmbeddedMoveSpecialTrackType

    def self.from_json_data: (untyped) -> EmbeddedMoveSpecialTrackType
    def to_json_data: () -> untyped
  end

  class EmbeddedMoveSpecialTrack < EmbeddedMove
    attr_accessor id: EmbeddedMoveID
    attr_accessor allow_momentum_burn: bool
    attr_accessor name: Label
    attr_accessor outcomes: MoveOutcomes
    attr_accessor text: MarkdownString
    attr_accessor trigger: TriggerSpecialTrack
    attr_accessor type: EmbeddedMoveSpecialTrackType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedMoveSpecialTrack
    def to_json_data: () -> untyped
  end

  class EmbeddedMoveID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> EmbeddedMoveID
    def to_json_data: () -> untyped
  end

  class EmbeddedMoveIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> EmbeddedMoveIDWildcard
    def to_json_data: () -> untyped
  end

  class EmbeddedNoRollMoveRollType
    attr_accessor value: String

    NO_ROLL: EmbeddedNoRollMoveRollType

    def self.from_json_data: (untyped) -> EmbeddedNoRollMoveRollType
    def to_json_data: () -> untyped
  end

  class EmbeddedNoRollMoveType
    attr_accessor value: String

    MOVE: EmbeddedNoRollMoveType

    def self.from_json_data: (untyped) -> EmbeddedNoRollMoveType
    def to_json_data: () -> untyped
  end

  class EmbeddedNoRollMove
    attr_accessor id: EmbeddedMoveID
    attr_accessor allow_momentum_burn: bool
    attr_accessor name: Label
    attr_accessor roll_type: EmbeddedNoRollMoveRollType
    attr_accessor text: MarkdownString
    attr_accessor trigger: TriggerNoRoll
    attr_accessor type: EmbeddedNoRollMoveType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedNoRollMove
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleColumnTextOracleType
    attr_accessor value: String

    COLUMN_TEXT: EmbeddedOracleColumnTextOracleType

    def self.from_json_data: (untyped) -> EmbeddedOracleColumnTextOracleType
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleColumnTextType
    attr_accessor value: String

    ORACLE_ROLLABLE: EmbeddedOracleColumnTextType

    def self.from_json_data: (untyped) -> EmbeddedOracleColumnTextType
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleColumnTextRecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> EmbeddedOracleColumnTextRecommendedRolls
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleColumnText
    attr_accessor id: EmbeddedOracleRollableID
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor oracle_type: EmbeddedOracleColumnTextOracleType
    attr_accessor rows: Array[OracleRollableRowText]
    attr_accessor type: EmbeddedOracleColumnTextType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: EmbeddedOracleColumnTextRecommendedRolls?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedOracleColumnText
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleColumnText2OracleType
    attr_accessor value: String

    COLUMN_TEXT2: EmbeddedOracleColumnText2OracleType

    def self.from_json_data: (untyped) -> EmbeddedOracleColumnText2OracleType
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleColumnText2Type
    attr_accessor value: String

    ORACLE_ROLLABLE: EmbeddedOracleColumnText2Type

    def self.from_json_data: (untyped) -> EmbeddedOracleColumnText2Type
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleColumnText2RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> EmbeddedOracleColumnText2RecommendedRolls
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleColumnText2
    attr_accessor id: EmbeddedOracleRollableID
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor oracle_type: EmbeddedOracleColumnText2OracleType
    attr_accessor rows: Array[OracleRollableRowText2]
    attr_accessor type: EmbeddedOracleColumnText2Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: EmbeddedOracleColumnText2RecommendedRolls?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedOracleColumnText2
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleColumnText3OracleType
    attr_accessor value: String

    COLUMN_TEXT3: EmbeddedOracleColumnText3OracleType

    def self.from_json_data: (untyped) -> EmbeddedOracleColumnText3OracleType
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleColumnText3Type
    attr_accessor value: String

    ORACLE_ROLLABLE: EmbeddedOracleColumnText3Type

    def self.from_json_data: (untyped) -> EmbeddedOracleColumnText3Type
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleColumnText3RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> EmbeddedOracleColumnText3RecommendedRolls
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleColumnText3
    attr_accessor id: EmbeddedOracleRollableID
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor oracle_type: EmbeddedOracleColumnText3OracleType
    attr_accessor rows: Array[OracleRollableRowText3]
    attr_accessor type: EmbeddedOracleColumnText3Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: EmbeddedOracleColumnText3RecommendedRolls?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedOracleColumnText3
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollable
    attr_accessor oracle_type: String

    def self.from_json_data: (untyped) -> EmbeddedOracleRollable
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableColumnTextType
    attr_accessor value: String

    ORACLE_ROLLABLE: EmbeddedOracleRollableColumnTextType

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableColumnTextType
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableColumnTextRecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableColumnTextRecommendedRolls
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableColumnText < EmbeddedOracleRollable
    attr_accessor id: EmbeddedOracleRollableID
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor rows: Array[OracleRollableRowText]
    attr_accessor type: EmbeddedOracleRollableColumnTextType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: EmbeddedOracleRollableColumnTextRecommendedRolls?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableColumnText
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableColumnText2Type
    attr_accessor value: String

    ORACLE_ROLLABLE: EmbeddedOracleRollableColumnText2Type

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableColumnText2Type
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableColumnText2RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableColumnText2RecommendedRolls
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableColumnText2 < EmbeddedOracleRollable
    attr_accessor id: EmbeddedOracleRollableID
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor rows: Array[OracleRollableRowText2]
    attr_accessor type: EmbeddedOracleRollableColumnText2Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: EmbeddedOracleRollableColumnText2RecommendedRolls?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableColumnText2
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableColumnText3Type
    attr_accessor value: String

    ORACLE_ROLLABLE: EmbeddedOracleRollableColumnText3Type

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableColumnText3Type
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableColumnText3RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableColumnText3RecommendedRolls
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableColumnText3 < EmbeddedOracleRollable
    attr_accessor id: EmbeddedOracleRollableID
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor rows: Array[OracleRollableRowText3]
    attr_accessor type: EmbeddedOracleRollableColumnText3Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: EmbeddedOracleRollableColumnText3RecommendedRolls?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableColumnText3
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableTableTextColumnLabels
    attr_accessor roll: Label
    attr_accessor text: Label

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableTableTextColumnLabels
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableTableTextType
    attr_accessor value: String

    ORACLE_ROLLABLE: EmbeddedOracleRollableTableTextType

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableTableTextType
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableTableTextRecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableTableTextRecommendedRolls
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableTableText < EmbeddedOracleRollable
    attr_accessor id: EmbeddedOracleRollableID
    attr_accessor column_labels: EmbeddedOracleRollableTableTextColumnLabels
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor rows: Array[OracleRollableRowText]
    attr_accessor type: EmbeddedOracleRollableTableTextType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: EmbeddedOracleRollableTableTextRecommendedRolls?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableTableText
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableTableText2ColumnLabels
    attr_accessor roll: Label
    attr_accessor text: Label
    attr_accessor text2: Label

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableTableText2ColumnLabels
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableTableText2Type
    attr_accessor value: String

    ORACLE_ROLLABLE: EmbeddedOracleRollableTableText2Type

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableTableText2Type
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableTableText2RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableTableText2RecommendedRolls
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableTableText2 < EmbeddedOracleRollable
    attr_accessor id: EmbeddedOracleRollableID
    attr_accessor column_labels: EmbeddedOracleRollableTableText2ColumnLabels
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor rows: Array[OracleRollableRowText2]
    attr_accessor type: EmbeddedOracleRollableTableText2Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: EmbeddedOracleRollableTableText2RecommendedRolls?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableTableText2
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableTableText3ColumnLabels
    attr_accessor roll: Label
    attr_accessor text: Label
    attr_accessor text2: Label
    attr_accessor text3: Label

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableTableText3ColumnLabels
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableTableText3Type
    attr_accessor value: String

    ORACLE_ROLLABLE: EmbeddedOracleRollableTableText3Type

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableTableText3Type
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableTableText3RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableTableText3RecommendedRolls
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableTableText3 < EmbeddedOracleRollable
    attr_accessor id: EmbeddedOracleRollableID
    attr_accessor column_labels: EmbeddedOracleRollableTableText3ColumnLabels
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor rows: Array[OracleRollableRowText3]
    attr_accessor type: EmbeddedOracleRollableTableText3Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: EmbeddedOracleRollableTableText3RecommendedRolls?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableTableText3
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableID
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleRollableIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> EmbeddedOracleRollableIDWildcard
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleTableTextColumnLabels
    attr_accessor roll: Label
    attr_accessor text: Label

    def self.from_json_data: (untyped) -> EmbeddedOracleTableTextColumnLabels
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleTableTextOracleType
    attr_accessor value: String

    TABLE_TEXT: EmbeddedOracleTableTextOracleType

    def self.from_json_data: (untyped) -> EmbeddedOracleTableTextOracleType
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleTableTextType
    attr_accessor value: String

    ORACLE_ROLLABLE: EmbeddedOracleTableTextType

    def self.from_json_data: (untyped) -> EmbeddedOracleTableTextType
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleTableTextRecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> EmbeddedOracleTableTextRecommendedRolls
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleTableText
    attr_accessor id: EmbeddedOracleRollableID
    attr_accessor column_labels: EmbeddedOracleTableTextColumnLabels
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor oracle_type: EmbeddedOracleTableTextOracleType
    attr_accessor rows: Array[OracleRollableRowText]
    attr_accessor type: EmbeddedOracleTableTextType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: EmbeddedOracleTableTextRecommendedRolls?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedOracleTableText
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleTableText2ColumnLabels
    attr_accessor roll: Label
    attr_accessor text: Label
    attr_accessor text2: Label

    def self.from_json_data: (untyped) -> EmbeddedOracleTableText2ColumnLabels
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleTableText2OracleType
    attr_accessor value: String

    TABLE_TEXT2: EmbeddedOracleTableText2OracleType

    def self.from_json_data: (untyped) -> EmbeddedOracleTableText2OracleType
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleTableText2Type
    attr_accessor value: String

    ORACLE_ROLLABLE: EmbeddedOracleTableText2Type

    def self.from_json_data: (untyped) -> EmbeddedOracleTableText2Type
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleTableText2RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> EmbeddedOracleTableText2RecommendedRolls
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleTableText2
    attr_accessor id: EmbeddedOracleRollableID
    attr_accessor column_labels: EmbeddedOracleTableText2ColumnLabels
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor oracle_type: EmbeddedOracleTableText2OracleType
    attr_accessor rows: Array[OracleRollableRowText2]
    attr_accessor type: EmbeddedOracleTableText2Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: EmbeddedOracleTableText2RecommendedRolls?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedOracleTableText2
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleTableText3ColumnLabels
    attr_accessor roll: Label
    attr_accessor text: Label
    attr_accessor text2: Label
    attr_accessor text3: Label

    def self.from_json_data: (untyped) -> EmbeddedOracleTableText3ColumnLabels
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleTableText3OracleType
    attr_accessor value: String

    TABLE_TEXT3: EmbeddedOracleTableText3OracleType

    def self.from_json_data: (untyped) -> EmbeddedOracleTableText3OracleType
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleTableText3Type
    attr_accessor value: String

    ORACLE_ROLLABLE: EmbeddedOracleTableText3Type

    def self.from_json_data: (untyped) -> EmbeddedOracleTableText3Type
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleTableText3RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> EmbeddedOracleTableText3RecommendedRolls
    def to_json_data: () -> untyped
  end

  class EmbeddedOracleTableText3
    attr_accessor id: EmbeddedOracleRollableID
    attr_accessor column_labels: EmbeddedOracleTableText3ColumnLabels
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor oracle_type: EmbeddedOracleTableText3OracleType
    attr_accessor rows: Array[OracleRollableRowText3]
    attr_accessor type: EmbeddedOracleTableText3Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: EmbeddedOracleTableText3RecommendedRolls?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedOracleTableText3
    def to_json_data: () -> untyped
  end

  class EmbeddedProgressRollMoveRollType
    attr_accessor value: String

    PROGRESS_ROLL: EmbeddedProgressRollMoveRollType

    def self.from_json_data: (untyped) -> EmbeddedProgressRollMoveRollType
    def to_json_data: () -> untyped
  end

  class EmbeddedProgressRollMoveType
    attr_accessor value: String

    MOVE: EmbeddedProgressRollMoveType

    def self.from_json_data: (untyped) -> EmbeddedProgressRollMoveType
    def to_json_data: () -> untyped
  end

  class EmbeddedProgressRollMove
    attr_accessor id: EmbeddedMoveID
    attr_accessor allow_momentum_burn: bool
    attr_accessor name: Label
    attr_accessor outcomes: MoveOutcomes
    attr_accessor roll_type: EmbeddedProgressRollMoveRollType
    attr_accessor text: MarkdownString
    attr_accessor tracks: ProgressTrackTypeInfo
    attr_accessor trigger: TriggerProgressRoll
    attr_accessor type: EmbeddedProgressRollMoveType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedProgressRollMove
    def to_json_data: () -> untyped
  end

  class EmbeddedSpecialTrackMoveRollType
    attr_accessor value: String

    SPECIAL_TRACK: EmbeddedSpecialTrackMoveRollType

    def self.from_json_data: (untyped) -> EmbeddedSpecialTrackMoveRollType
    def to_json_data: () -> untyped
  end

  class EmbeddedSpecialTrackMoveType
    attr_accessor value: String

    MOVE: EmbeddedSpecialTrackMoveType

    def self.from_json_data: (untyped) -> EmbeddedSpecialTrackMoveType
    def to_json_data: () -> untyped
  end

  class EmbeddedSpecialTrackMove
    attr_accessor id: EmbeddedMoveID
    attr_accessor allow_momentum_burn: bool
    attr_accessor name: Label
    attr_accessor outcomes: MoveOutcomes
    attr_accessor roll_type: EmbeddedSpecialTrackMoveRollType
    attr_accessor text: MarkdownString
    attr_accessor trigger: TriggerSpecialTrack
    attr_accessor type: EmbeddedSpecialTrackMoveType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> EmbeddedSpecialTrackMove
    def to_json_data: () -> untyped
  end

  class EntityPrompt
    attr_accessor text: MarkdownString

    def self.from_json_data: (untyped) -> EntityPrompt
    def to_json_data: () -> untyped
  end

  class ExpansionDataswornVersion
    attr_accessor value: String

    DEFAULT_NAME: ExpansionDataswornVersion

    def self.from_json_data: (untyped) -> ExpansionDataswornVersion
    def to_json_data: () -> untyped
  end

  class ExpansionType
    attr_accessor value: String

    EXPANSION: ExpansionType

    def self.from_json_data: (untyped) -> ExpansionType
    def to_json_data: () -> untyped
  end

  class Expansion
    attr_accessor id: ExpansionID
    attr_accessor assets: Hash[String, AssetCollection]
    attr_accessor authors: Array[AuthorInfo]
    attr_accessor datasworn_version: ExpansionDataswornVersion
    attr_accessor date: DateTime
    attr_accessor license: WebURL
    attr_accessor moves: Hash[String, MoveCategory]
    attr_accessor oracles: Hash[String, OracleTablesCollection]
    attr_accessor ruleset: RulesetID
    attr_accessor title: Label
    attr_accessor type: ExpansionType
    attr_accessor url: WebURL
    attr_accessor atlas: Hash[String, AtlasCollection]?
    attr_accessor delve_sites: Hash[String, DelveSite]?
    attr_accessor description: MarkdownString?
    attr_accessor npcs: Hash[String, NpcCollection]?
    attr_accessor rarities: Hash[String, Rarity]?
    attr_accessor rules: RulesExpansion?
    attr_accessor site_domains: Hash[String, DelveSiteDomain]?
    attr_accessor site_themes: Hash[String, DelveSiteTheme]?
    attr_accessor truths: Hash[String, Truth]?

    def self.from_json_data: (untyped) -> Expansion
    def to_json_data: () -> untyped
  end

  class ExpansionID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> ExpansionID
    def to_json_data: () -> untyped
  end

  class I18nHint
    attr_accessor part_of_speech: PartOfSpeech?

    def self.from_json_data: (untyped) -> I18nHint
    def to_json_data: () -> untyped
  end

  class I18nHintsTemplate
    attr_accessor text: I18nHint?
    attr_accessor text2: I18nHint?
    attr_accessor text3: I18nHint?

    def self.from_json_data: (untyped) -> I18nHintsTemplate
    def to_json_data: () -> untyped
  end

  class I18nHints
    attr_accessor template: I18nHintsTemplate?
    attr_accessor text: I18nHint?
    attr_accessor text2: I18nHint?
    attr_accessor text3: I18nHint?

    def self.from_json_data: (untyped) -> I18nHints
    def to_json_data: () -> untyped
  end

  class ImpactCategory
    attr_accessor contents: Hash[String, ImpactRule]
    attr_accessor description: MarkdownString
    attr_accessor label: Label

    def self.from_json_data: (untyped) -> ImpactCategory
    def to_json_data: () -> untyped
  end

  class ImpactRule
    attr_accessor description: MarkdownString
    attr_accessor label: Label
    attr_accessor permanent: bool
    attr_accessor prevents_recovery: Array[ConditionMeterKey]
    attr_accessor shared: bool

    def self.from_json_data: (untyped) -> ImpactRule
    def to_json_data: () -> untyped
  end

  class Label
    attr_accessor value: String

    def self.from_json_data: (untyped) -> Label
    def to_json_data: () -> untyped
  end

  class MarkdownString
    attr_accessor value: String

    def self.from_json_data: (untyped) -> MarkdownString
    def to_json_data: () -> untyped
  end

  class MarkdownTemplateString
    attr_accessor value: String

    def self.from_json_data: (untyped) -> MarkdownTemplateString
    def to_json_data: () -> untyped
  end

  class Move
    attr_accessor roll_type: String

    def self.from_json_data: (untyped) -> Move
    def to_json_data: () -> untyped
  end

  class MoveActionRollType
    attr_accessor value: String

    MOVE: MoveActionRollType

    def self.from_json_data: (untyped) -> MoveActionRollType
    def to_json_data: () -> untyped
  end

  class MoveActionRoll0 < Move
    attr_accessor id: MoveID
    attr_accessor source: SourceInfo
    attr_accessor allow_momentum_burn: bool
    attr_accessor name: Label
    attr_accessor outcomes: MoveOutcomes
    attr_accessor text: MarkdownString
    attr_accessor trigger: TriggerActionRoll
    attr_accessor type: MoveActionRollType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor oracles: Hash[String, EmbeddedOracleRollable]?
    attr_accessor replaces: Array[MoveIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> MoveActionRoll0
    def to_json_data: () -> untyped
  end

  class MoveNoRollType
    attr_accessor value: String

    MOVE: MoveNoRollType

    def self.from_json_data: (untyped) -> MoveNoRollType
    def to_json_data: () -> untyped
  end

  class MoveNoRoll0 < Move
    attr_accessor id: MoveID
    attr_accessor source: SourceInfo
    attr_accessor allow_momentum_burn: bool
    attr_accessor name: Label
    attr_accessor text: MarkdownString
    attr_accessor trigger: TriggerNoRoll
    attr_accessor type: MoveNoRollType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor oracles: Hash[String, EmbeddedOracleRollable]?
    attr_accessor replaces: Array[MoveIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> MoveNoRoll0
    def to_json_data: () -> untyped
  end

  class MoveProgressRollType
    attr_accessor value: String

    MOVE: MoveProgressRollType

    def self.from_json_data: (untyped) -> MoveProgressRollType
    def to_json_data: () -> untyped
  end

  class MoveProgressRoll0 < Move
    attr_accessor id: MoveID
    attr_accessor source: SourceInfo
    attr_accessor allow_momentum_burn: bool
    attr_accessor name: Label
    attr_accessor outcomes: MoveOutcomes
    attr_accessor text: MarkdownString
    attr_accessor tracks: ProgressTrackTypeInfo
    attr_accessor trigger: TriggerProgressRoll
    attr_accessor type: MoveProgressRollType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor oracles: Hash[String, EmbeddedOracleRollable]?
    attr_accessor replaces: Array[MoveIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> MoveProgressRoll0
    def to_json_data: () -> untyped
  end

  class MoveSpecialTrackType
    attr_accessor value: String

    MOVE: MoveSpecialTrackType

    def self.from_json_data: (untyped) -> MoveSpecialTrackType
    def to_json_data: () -> untyped
  end

  class MoveSpecialTrack0 < Move
    attr_accessor id: MoveID
    attr_accessor source: SourceInfo
    attr_accessor allow_momentum_burn: bool
    attr_accessor name: Label
    attr_accessor outcomes: MoveOutcomes
    attr_accessor text: MarkdownString
    attr_accessor trigger: TriggerSpecialTrack
    attr_accessor type: MoveSpecialTrackType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor oracles: Hash[String, EmbeddedOracleRollable]?
    attr_accessor replaces: Array[MoveIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> MoveSpecialTrack0
    def to_json_data: () -> untyped
  end

  class MoveActionRollRollType
    attr_accessor value: String

    ACTION_ROLL: MoveActionRollRollType

    def self.from_json_data: (untyped) -> MoveActionRollRollType
    def to_json_data: () -> untyped
  end

  class MoveActionRollType0
    attr_accessor value: String

    MOVE: MoveActionRollType0

    def self.from_json_data: (untyped) -> MoveActionRollType0
    def to_json_data: () -> untyped
  end

  class MoveActionRoll
    attr_accessor id: MoveID
    attr_accessor source: SourceInfo
    attr_accessor allow_momentum_burn: bool
    attr_accessor name: Label
    attr_accessor outcomes: MoveOutcomes
    attr_accessor roll_type: MoveActionRollRollType
    attr_accessor text: MarkdownString
    attr_accessor trigger: TriggerActionRoll
    attr_accessor type: MoveActionRollType0
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor oracles: Hash[String, EmbeddedOracleRollable]?
    attr_accessor replaces: Array[MoveIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> MoveActionRoll
    def to_json_data: () -> untyped
  end

  class MoveActionRollEnhancementRollType
    attr_accessor value: String

    ACTION_ROLL: MoveActionRollEnhancementRollType

    def self.from_json_data: (untyped) -> MoveActionRollEnhancementRollType
    def to_json_data: () -> untyped
  end

  class MoveActionRollEnhancement
    attr_accessor enhances: Array[AnyMoveIDWildcard]
    attr_accessor roll_type: MoveActionRollEnhancementRollType
    attr_accessor trigger: TriggerActionRollEnhancement?

    def self.from_json_data: (untyped) -> MoveActionRollEnhancement
    def to_json_data: () -> untyped
  end

  class MoveCategoryType
    attr_accessor value: String

    MOVE_CATEGORY: MoveCategoryType

    def self.from_json_data: (untyped) -> MoveCategoryType
    def to_json_data: () -> untyped
  end

  class MoveCategory
    attr_accessor id: MoveCategoryID
    attr_accessor source: SourceInfo
    attr_accessor collections: Hash[String, MoveCategory]
    attr_accessor contents: Hash[String, Move]
    attr_accessor name: Label
    attr_accessor type: MoveCategoryType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: Array[MoveCategoryIDWildcard]?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[MoveCategoryIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> MoveCategory
    def to_json_data: () -> untyped
  end

  class MoveCategoryID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> MoveCategoryID
    def to_json_data: () -> untyped
  end

  class MoveCategoryIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> MoveCategoryIDWildcard
    def to_json_data: () -> untyped
  end

  class MoveEnhancement
    attr_accessor roll_type: String

    def self.from_json_data: (untyped) -> MoveEnhancement
    def to_json_data: () -> untyped
  end

  class MoveEnhancementActionRoll < MoveEnhancement
    attr_accessor enhances: Array[AnyMoveIDWildcard]
    attr_accessor trigger: TriggerActionRollEnhancement?

    def self.from_json_data: (untyped) -> MoveEnhancementActionRoll
    def to_json_data: () -> untyped
  end

  class MoveEnhancementNoRoll < MoveEnhancement
    attr_accessor enhances: Array[AnyMoveIDWildcard]
    attr_accessor trigger: TriggerNoRollEnhancement?

    def self.from_json_data: (untyped) -> MoveEnhancementNoRoll
    def to_json_data: () -> untyped
  end

  class MoveEnhancementProgressRoll < MoveEnhancement
    attr_accessor enhances: Array[AnyMoveIDWildcard]
    attr_accessor trigger: TriggerProgressRollEnhancement?

    def self.from_json_data: (untyped) -> MoveEnhancementProgressRoll
    def to_json_data: () -> untyped
  end

  class MoveEnhancementSpecialTrack < MoveEnhancement
    attr_accessor enhances: Array[AnyMoveIDWildcard]
    attr_accessor trigger: TriggerSpecialTrackEnhancement?

    def self.from_json_data: (untyped) -> MoveEnhancementSpecialTrack
    def to_json_data: () -> untyped
  end

  class MoveID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> MoveID
    def to_json_data: () -> untyped
  end

  class MoveIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> MoveIDWildcard
    def to_json_data: () -> untyped
  end

  class MoveNoRollRollType
    attr_accessor value: String

    NO_ROLL: MoveNoRollRollType

    def self.from_json_data: (untyped) -> MoveNoRollRollType
    def to_json_data: () -> untyped
  end

  class MoveNoRollType0
    attr_accessor value: String

    MOVE: MoveNoRollType0

    def self.from_json_data: (untyped) -> MoveNoRollType0
    def to_json_data: () -> untyped
  end

  class MoveNoRoll
    attr_accessor id: MoveID
    attr_accessor source: SourceInfo
    attr_accessor allow_momentum_burn: bool
    attr_accessor name: Label
    attr_accessor roll_type: MoveNoRollRollType
    attr_accessor text: MarkdownString
    attr_accessor trigger: TriggerNoRoll
    attr_accessor type: MoveNoRollType0
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor oracles: Hash[String, EmbeddedOracleRollable]?
    attr_accessor replaces: Array[MoveIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> MoveNoRoll
    def to_json_data: () -> untyped
  end

  class MoveNoRollEnhancementRollType
    attr_accessor value: String

    NO_ROLL: MoveNoRollEnhancementRollType

    def self.from_json_data: (untyped) -> MoveNoRollEnhancementRollType
    def to_json_data: () -> untyped
  end

  class MoveNoRollEnhancement
    attr_accessor enhances: Array[AnyMoveIDWildcard]
    attr_accessor roll_type: MoveNoRollEnhancementRollType
    attr_accessor trigger: TriggerNoRollEnhancement?

    def self.from_json_data: (untyped) -> MoveNoRollEnhancement
    def to_json_data: () -> untyped
  end

  class MoveOracleRollableID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> MoveOracleRollableID
    def to_json_data: () -> untyped
  end

  class MoveOracleRollableIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> MoveOracleRollableIDWildcard
    def to_json_data: () -> untyped
  end

  class MoveOracleRollableRowID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> MoveOracleRollableRowID
    def to_json_data: () -> untyped
  end

  class MoveOracleRollableRowIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> MoveOracleRollableRowIDWildcard
    def to_json_data: () -> untyped
  end

  class MoveOutcome
    attr_accessor text: MarkdownString
    attr_accessor oracle_rolls: Array[OracleRoll]?

    def self.from_json_data: (untyped) -> MoveOutcome
    def to_json_data: () -> untyped
  end

  class MoveOutcomes
    attr_accessor miss: MoveOutcome
    attr_accessor strong_hit: MoveOutcome
    attr_accessor weak_hit: MoveOutcome

    def self.from_json_data: (untyped) -> MoveOutcomes
    def to_json_data: () -> untyped
  end

  class MoveProgressRollRollType
    attr_accessor value: String

    PROGRESS_ROLL: MoveProgressRollRollType

    def self.from_json_data: (untyped) -> MoveProgressRollRollType
    def to_json_data: () -> untyped
  end

  class MoveProgressRollType0
    attr_accessor value: String

    MOVE: MoveProgressRollType0

    def self.from_json_data: (untyped) -> MoveProgressRollType0
    def to_json_data: () -> untyped
  end

  class MoveProgressRoll
    attr_accessor id: MoveID
    attr_accessor source: SourceInfo
    attr_accessor allow_momentum_burn: bool
    attr_accessor name: Label
    attr_accessor outcomes: MoveOutcomes
    attr_accessor roll_type: MoveProgressRollRollType
    attr_accessor text: MarkdownString
    attr_accessor tracks: ProgressTrackTypeInfo
    attr_accessor trigger: TriggerProgressRoll
    attr_accessor type: MoveProgressRollType0
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor oracles: Hash[String, EmbeddedOracleRollable]?
    attr_accessor replaces: Array[MoveIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> MoveProgressRoll
    def to_json_data: () -> untyped
  end

  class MoveProgressRollEnhancementRollType
    attr_accessor value: String

    PROGRESS_ROLL: MoveProgressRollEnhancementRollType

    def self.from_json_data: (untyped) -> MoveProgressRollEnhancementRollType
    def to_json_data: () -> untyped
  end

  class MoveProgressRollEnhancement
    attr_accessor enhances: Array[AnyMoveIDWildcard]
    attr_accessor roll_type: MoveProgressRollEnhancementRollType
    attr_accessor trigger: TriggerProgressRollEnhancement?

    def self.from_json_data: (untyped) -> MoveProgressRollEnhancement
    def to_json_data: () -> untyped
  end

  class MoveRollType
    attr_accessor value: String

    ACTION_ROLL: MoveRollType
    NO_ROLL: MoveRollType
    PROGRESS_ROLL: MoveRollType
    SPECIAL_TRACK: MoveRollType

    def self.from_json_data: (untyped) -> MoveRollType
    def to_json_data: () -> untyped
  end

  class MoveSpecialTrackRollType
    attr_accessor value: String

    SPECIAL_TRACK: MoveSpecialTrackRollType

    def self.from_json_data: (untyped) -> MoveSpecialTrackRollType
    def to_json_data: () -> untyped
  end

  class MoveSpecialTrackType0
    attr_accessor value: String

    MOVE: MoveSpecialTrackType0

    def self.from_json_data: (untyped) -> MoveSpecialTrackType0
    def to_json_data: () -> untyped
  end

  class MoveSpecialTrack
    attr_accessor id: MoveID
    attr_accessor source: SourceInfo
    attr_accessor allow_momentum_burn: bool
    attr_accessor name: Label
    attr_accessor outcomes: MoveOutcomes
    attr_accessor roll_type: MoveSpecialTrackRollType
    attr_accessor text: MarkdownString
    attr_accessor trigger: TriggerSpecialTrack
    attr_accessor type: MoveSpecialTrackType0
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor oracles: Hash[String, EmbeddedOracleRollable]?
    attr_accessor replaces: Array[MoveIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> MoveSpecialTrack
    def to_json_data: () -> untyped
  end

  class MoveSpecialTrackEnhancementRollType
    attr_accessor value: String

    SPECIAL_TRACK: MoveSpecialTrackEnhancementRollType

    def self.from_json_data: (untyped) -> MoveSpecialTrackEnhancementRollType
    def to_json_data: () -> untyped
  end

  class MoveSpecialTrackEnhancement
    attr_accessor enhances: Array[AnyMoveIDWildcard]
    attr_accessor roll_type: MoveSpecialTrackEnhancementRollType
    attr_accessor trigger: TriggerSpecialTrackEnhancement?

    def self.from_json_data: (untyped) -> MoveSpecialTrackEnhancement
    def to_json_data: () -> untyped
  end

  class NonCollectableType
    attr_accessor value: String

    DELVE_SITE: NonCollectableType
    DELVE_SITE_DOMAIN: NonCollectableType
    DELVE_SITE_THEME: NonCollectableType
    RARITY: NonCollectableType
    TRUTH: NonCollectableType

    def self.from_json_data: (untyped) -> NonCollectableType
    def to_json_data: () -> untyped
  end

  class NpcType
    attr_accessor value: String

    NPC: NpcType

    def self.from_json_data: (untyped) -> NpcType
    def to_json_data: () -> untyped
  end

  class Npc
    attr_accessor id: NpcID
    attr_accessor source: SourceInfo
    attr_accessor description: MarkdownString
    attr_accessor drives: Array[MarkdownString]
    attr_accessor features: Array[MarkdownString]
    attr_accessor name: Label
    attr_accessor nature: NpcNature
    attr_accessor rank: ChallengeRank
    attr_accessor tactics: Array[MarkdownString]
    attr_accessor type: NpcType
    attr_accessor variants: Hash[String, NpcVariant]
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor quest_starter: MarkdownString?
    attr_accessor replaces: Array[NpcIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Tags?
    attr_accessor your_truth: MarkdownString?

    def self.from_json_data: (untyped) -> Npc
    def to_json_data: () -> untyped
  end

  class NpcCollectionType
    attr_accessor value: String

    NPC_COLLECTION: NpcCollectionType

    def self.from_json_data: (untyped) -> NpcCollectionType
    def to_json_data: () -> untyped
  end

  class NpcCollection
    attr_accessor id: NpcCollectionID
    attr_accessor source: SourceInfo
    attr_accessor collections: Hash[String, NpcCollection]
    attr_accessor contents: Hash[String, Npc]
    attr_accessor name: Label
    attr_accessor type: NpcCollectionType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: Array[NpcCollectionIDWildcard]?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[NpcCollectionIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> NpcCollection
    def to_json_data: () -> untyped
  end

  class NpcCollectionID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> NpcCollectionID
    def to_json_data: () -> untyped
  end

  class NpcCollectionIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> NpcCollectionIDWildcard
    def to_json_data: () -> untyped
  end

  class NpcID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> NpcID
    def to_json_data: () -> untyped
  end

  class NpcIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> NpcIDWildcard
    def to_json_data: () -> untyped
  end

  class NpcNature
    attr_accessor value: Label

    def self.from_json_data: (untyped) -> NpcNature
    def to_json_data: () -> untyped
  end

  class NpcVariant
    attr_accessor id: NpcVariantID
    attr_accessor description: MarkdownString
    attr_accessor name: Label
    attr_accessor nature: NpcNature
    attr_accessor rank: ChallengeRank
    attr_accessor comment: Documentation?
    attr_accessor summary: MarkdownString?

    def self.from_json_data: (untyped) -> NpcVariant
    def to_json_data: () -> untyped
  end

  class NpcVariantID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> NpcVariantID
    def to_json_data: () -> untyped
  end

  class NpcVariantIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> NpcVariantIDWildcard
    def to_json_data: () -> untyped
  end

  class OracleCollection
    attr_accessor oracle_type: String

    def self.from_json_data: (untyped) -> OracleCollection
    def to_json_data: () -> untyped
  end

  class OracleCollectionTableSharedRollsColumnLabels
    attr_accessor roll: Label

    def self.from_json_data: (untyped) -> OracleCollectionTableSharedRollsColumnLabels
    def to_json_data: () -> untyped
  end

  class OracleCollectionTableSharedRollsType
    attr_accessor value: String

    ORACLE_COLLECTION: OracleCollectionTableSharedRollsType

    def self.from_json_data: (untyped) -> OracleCollectionTableSharedRollsType
    def to_json_data: () -> untyped
  end

  class OracleCollectionTableSharedRolls < OracleCollection
    attr_accessor id: OracleCollectionID
    attr_accessor source: SourceInfo
    attr_accessor column_labels: OracleCollectionTableSharedRollsColumnLabels
    attr_accessor contents: Hash[String, OracleColumnText]
    attr_accessor name: Label
    attr_accessor type: OracleCollectionTableSharedRollsType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: Array[OracleCollectionIDWildcard]?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[OracleCollectionIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleCollectionTableSharedRolls
    def to_json_data: () -> untyped
  end

  class OracleCollectionTableSharedTextColumnLabels
    attr_accessor text: Label

    def self.from_json_data: (untyped) -> OracleCollectionTableSharedTextColumnLabels
    def to_json_data: () -> untyped
  end

  class OracleCollectionTableSharedTextType
    attr_accessor value: String

    ORACLE_COLLECTION: OracleCollectionTableSharedTextType

    def self.from_json_data: (untyped) -> OracleCollectionTableSharedTextType
    def to_json_data: () -> untyped
  end

  class OracleCollectionTableSharedText < OracleCollection
    attr_accessor id: OracleCollectionID
    attr_accessor source: SourceInfo
    attr_accessor column_labels: OracleCollectionTableSharedTextColumnLabels
    attr_accessor contents: Hash[String, OracleColumnText]
    attr_accessor name: Label
    attr_accessor type: OracleCollectionTableSharedTextType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: Array[OracleCollectionIDWildcard]?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[OracleCollectionIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleCollectionTableSharedText
    def to_json_data: () -> untyped
  end

  class OracleCollectionTableSharedText2ColumnLabels
    attr_accessor text: Label
    attr_accessor text2: Label

    def self.from_json_data: (untyped) -> OracleCollectionTableSharedText2ColumnLabels
    def to_json_data: () -> untyped
  end

  class OracleCollectionTableSharedText2Type
    attr_accessor value: String

    ORACLE_COLLECTION: OracleCollectionTableSharedText2Type

    def self.from_json_data: (untyped) -> OracleCollectionTableSharedText2Type
    def to_json_data: () -> untyped
  end

  class OracleCollectionTableSharedText2 < OracleCollection
    attr_accessor id: OracleCollectionID
    attr_accessor source: SourceInfo
    attr_accessor column_labels: OracleCollectionTableSharedText2ColumnLabels
    attr_accessor contents: Hash[String, OracleColumnText2]
    attr_accessor name: Label
    attr_accessor type: OracleCollectionTableSharedText2Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: Array[OracleCollectionIDWildcard]?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[OracleCollectionIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleCollectionTableSharedText2
    def to_json_data: () -> untyped
  end

  class OracleCollectionTableSharedText3ColumnLabels
    attr_accessor text: Label
    attr_accessor text2: Label
    attr_accessor text3: Label

    def self.from_json_data: (untyped) -> OracleCollectionTableSharedText3ColumnLabels
    def to_json_data: () -> untyped
  end

  class OracleCollectionTableSharedText3Type
    attr_accessor value: String

    ORACLE_COLLECTION: OracleCollectionTableSharedText3Type

    def self.from_json_data: (untyped) -> OracleCollectionTableSharedText3Type
    def to_json_data: () -> untyped
  end

  class OracleCollectionTableSharedText3 < OracleCollection
    attr_accessor id: OracleCollectionID
    attr_accessor source: SourceInfo
    attr_accessor column_labels: OracleCollectionTableSharedText3ColumnLabels
    attr_accessor contents: Hash[String, OracleColumnText3]
    attr_accessor name: Label
    attr_accessor type: OracleCollectionTableSharedText3Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: Array[OracleCollectionIDWildcard]?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[OracleCollectionIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleCollectionTableSharedText3
    def to_json_data: () -> untyped
  end

  class OracleCollectionTablesType
    attr_accessor value: String

    ORACLE_COLLECTION: OracleCollectionTablesType

    def self.from_json_data: (untyped) -> OracleCollectionTablesType
    def to_json_data: () -> untyped
  end

  class OracleCollectionTables < OracleCollection
    attr_accessor id: OracleCollectionID
    attr_accessor source: SourceInfo
    attr_accessor collections: Hash[String, OracleCollection]
    attr_accessor contents: Hash[String, OracleRollableTable]
    attr_accessor name: Label
    attr_accessor type: OracleCollectionTablesType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: Array[OracleCollectionIDWildcard]?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[OracleCollectionIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleCollectionTables
    def to_json_data: () -> untyped
  end

  class OracleCollectionID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> OracleCollectionID
    def to_json_data: () -> untyped
  end

  class OracleCollectionIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> OracleCollectionIDWildcard
    def to_json_data: () -> untyped
  end

  class OracleColumnTextOracleType
    attr_accessor value: String

    COLUMN_TEXT: OracleColumnTextOracleType

    def self.from_json_data: (untyped) -> OracleColumnTextOracleType
    def to_json_data: () -> untyped
  end

  class OracleColumnTextType
    attr_accessor value: String

    ORACLE_ROLLABLE: OracleColumnTextType

    def self.from_json_data: (untyped) -> OracleColumnTextType
    def to_json_data: () -> untyped
  end

  class OracleColumnTextRecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> OracleColumnTextRecommendedRolls
    def to_json_data: () -> untyped
  end

  class OracleColumnText
    attr_accessor id: OracleRollableID
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor oracle_type: OracleColumnTextOracleType
    attr_accessor rows: Array[OracleRollableRowText]
    attr_accessor type: OracleColumnTextType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: OracleColumnTextRecommendedRolls?
    attr_accessor replaces: Array[OracleRollableIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleColumnText
    def to_json_data: () -> untyped
  end

  class OracleColumnText2OracleType
    attr_accessor value: String

    COLUMN_TEXT2: OracleColumnText2OracleType

    def self.from_json_data: (untyped) -> OracleColumnText2OracleType
    def to_json_data: () -> untyped
  end

  class OracleColumnText2Type
    attr_accessor value: String

    ORACLE_ROLLABLE: OracleColumnText2Type

    def self.from_json_data: (untyped) -> OracleColumnText2Type
    def to_json_data: () -> untyped
  end

  class OracleColumnText2RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> OracleColumnText2RecommendedRolls
    def to_json_data: () -> untyped
  end

  class OracleColumnText2
    attr_accessor id: OracleRollableID
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor oracle_type: OracleColumnText2OracleType
    attr_accessor rows: Array[OracleRollableRowText2]
    attr_accessor type: OracleColumnText2Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: OracleColumnText2RecommendedRolls?
    attr_accessor replaces: Array[OracleRollableIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleColumnText2
    def to_json_data: () -> untyped
  end

  class OracleColumnText3OracleType
    attr_accessor value: String

    COLUMN_TEXT3: OracleColumnText3OracleType

    def self.from_json_data: (untyped) -> OracleColumnText3OracleType
    def to_json_data: () -> untyped
  end

  class OracleColumnText3Type
    attr_accessor value: String

    ORACLE_ROLLABLE: OracleColumnText3Type

    def self.from_json_data: (untyped) -> OracleColumnText3Type
    def to_json_data: () -> untyped
  end

  class OracleColumnText3RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> OracleColumnText3RecommendedRolls
    def to_json_data: () -> untyped
  end

  class OracleColumnText3
    attr_accessor id: OracleRollableID
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor oracle_type: OracleColumnText3OracleType
    attr_accessor rows: Array[OracleRollableRowText3]
    attr_accessor type: OracleColumnText3Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: OracleColumnText3RecommendedRolls?
    attr_accessor replaces: Array[OracleRollableIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleColumnText3
    def to_json_data: () -> untyped
  end

  class OracleDuplicateBehavior
    attr_accessor value: String

    KEEP: OracleDuplicateBehavior
    MAKE_IT_WORSE: OracleDuplicateBehavior
    REROLL: OracleDuplicateBehavior

    def self.from_json_data: (untyped) -> OracleDuplicateBehavior
    def to_json_data: () -> untyped
  end

  class OracleMatchBehavior
    attr_accessor text: MarkdownString

    def self.from_json_data: (untyped) -> OracleMatchBehavior
    def to_json_data: () -> untyped
  end

  class OracleRoll
    attr_accessor auto: bool
    attr_accessor dice: DiceExpression
    attr_accessor duplicates: OracleDuplicateBehavior
    attr_accessor number_of_rolls: Integer
    attr_accessor oracle: OracleRollableID

    def self.from_json_data: (untyped) -> OracleRoll
    def to_json_data: () -> untyped
  end

  class OracleRollTemplate
    attr_accessor text: MarkdownTemplateString?
    attr_accessor text2: MarkdownTemplateString?
    attr_accessor text3: MarkdownTemplateString?

    def self.from_json_data: (untyped) -> OracleRollTemplate
    def to_json_data: () -> untyped
  end

  class OracleRollable
    attr_accessor oracle_type: String

    def self.from_json_data: (untyped) -> OracleRollable
    def to_json_data: () -> untyped
  end

  class OracleRollableColumnTextType
    attr_accessor value: String

    ORACLE_ROLLABLE: OracleRollableColumnTextType

    def self.from_json_data: (untyped) -> OracleRollableColumnTextType
    def to_json_data: () -> untyped
  end

  class OracleRollableColumnTextRecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> OracleRollableColumnTextRecommendedRolls
    def to_json_data: () -> untyped
  end

  class OracleRollableColumnText < OracleRollable
    attr_accessor id: OracleRollableID
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor rows: Array[OracleRollableRowText]
    attr_accessor type: OracleRollableColumnTextType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: OracleRollableColumnTextRecommendedRolls?
    attr_accessor replaces: Array[OracleRollableIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleRollableColumnText
    def to_json_data: () -> untyped
  end

  class OracleRollableColumnText2Type
    attr_accessor value: String

    ORACLE_ROLLABLE: OracleRollableColumnText2Type

    def self.from_json_data: (untyped) -> OracleRollableColumnText2Type
    def to_json_data: () -> untyped
  end

  class OracleRollableColumnText2RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> OracleRollableColumnText2RecommendedRolls
    def to_json_data: () -> untyped
  end

  class OracleRollableColumnText2 < OracleRollable
    attr_accessor id: OracleRollableID
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor rows: Array[OracleRollableRowText2]
    attr_accessor type: OracleRollableColumnText2Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: OracleRollableColumnText2RecommendedRolls?
    attr_accessor replaces: Array[OracleRollableIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleRollableColumnText2
    def to_json_data: () -> untyped
  end

  class OracleRollableColumnText3Type
    attr_accessor value: String

    ORACLE_ROLLABLE: OracleRollableColumnText3Type

    def self.from_json_data: (untyped) -> OracleRollableColumnText3Type
    def to_json_data: () -> untyped
  end

  class OracleRollableColumnText3RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> OracleRollableColumnText3RecommendedRolls
    def to_json_data: () -> untyped
  end

  class OracleRollableColumnText3 < OracleRollable
    attr_accessor id: OracleRollableID
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor rows: Array[OracleRollableRowText3]
    attr_accessor type: OracleRollableColumnText3Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: OracleRollableColumnText3RecommendedRolls?
    attr_accessor replaces: Array[OracleRollableIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleRollableColumnText3
    def to_json_data: () -> untyped
  end

  class OracleRollableTableTextColumnLabels
    attr_accessor roll: Label
    attr_accessor text: Label

    def self.from_json_data: (untyped) -> OracleRollableTableTextColumnLabels
    def to_json_data: () -> untyped
  end

  class OracleRollableTableTextType
    attr_accessor value: String

    ORACLE_ROLLABLE: OracleRollableTableTextType

    def self.from_json_data: (untyped) -> OracleRollableTableTextType
    def to_json_data: () -> untyped
  end

  class OracleRollableTableTextRecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> OracleRollableTableTextRecommendedRolls
    def to_json_data: () -> untyped
  end

  class OracleRollableTableText < OracleRollable
    attr_accessor id: OracleRollableID
    attr_accessor source: SourceInfo
    attr_accessor column_labels: OracleRollableTableTextColumnLabels
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor rows: Array[OracleRollableRowText]
    attr_accessor type: OracleRollableTableTextType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: OracleRollableTableTextRecommendedRolls?
    attr_accessor replaces: Array[OracleRollableIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleRollableTableText
    def to_json_data: () -> untyped
  end

  class OracleRollableTableText2ColumnLabels
    attr_accessor roll: Label
    attr_accessor text: Label
    attr_accessor text2: Label

    def self.from_json_data: (untyped) -> OracleRollableTableText2ColumnLabels
    def to_json_data: () -> untyped
  end

  class OracleRollableTableText2Type
    attr_accessor value: String

    ORACLE_ROLLABLE: OracleRollableTableText2Type

    def self.from_json_data: (untyped) -> OracleRollableTableText2Type
    def to_json_data: () -> untyped
  end

  class OracleRollableTableText2RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> OracleRollableTableText2RecommendedRolls
    def to_json_data: () -> untyped
  end

  class OracleRollableTableText2 < OracleRollable
    attr_accessor id: OracleRollableID
    attr_accessor source: SourceInfo
    attr_accessor column_labels: OracleRollableTableText2ColumnLabels
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor rows: Array[OracleRollableRowText2]
    attr_accessor type: OracleRollableTableText2Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: OracleRollableTableText2RecommendedRolls?
    attr_accessor replaces: Array[OracleRollableIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleRollableTableText2
    def to_json_data: () -> untyped
  end

  class OracleRollableTableText3ColumnLabels
    attr_accessor roll: Label
    attr_accessor text: Label
    attr_accessor text2: Label
    attr_accessor text3: Label

    def self.from_json_data: (untyped) -> OracleRollableTableText3ColumnLabels
    def to_json_data: () -> untyped
  end

  class OracleRollableTableText3Type
    attr_accessor value: String

    ORACLE_ROLLABLE: OracleRollableTableText3Type

    def self.from_json_data: (untyped) -> OracleRollableTableText3Type
    def to_json_data: () -> untyped
  end

  class OracleRollableTableText3RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> OracleRollableTableText3RecommendedRolls
    def to_json_data: () -> untyped
  end

  class OracleRollableTableText3 < OracleRollable
    attr_accessor id: OracleRollableID
    attr_accessor source: SourceInfo
    attr_accessor column_labels: OracleRollableTableText3ColumnLabels
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor rows: Array[OracleRollableRowText3]
    attr_accessor type: OracleRollableTableText3Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: OracleRollableTableText3RecommendedRolls?
    attr_accessor replaces: Array[OracleRollableIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleRollableTableText3
    def to_json_data: () -> untyped
  end

  class OracleRollableID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> OracleRollableID
    def to_json_data: () -> untyped
  end

  class OracleRollableIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> OracleRollableIDWildcard
    def to_json_data: () -> untyped
  end

  class OracleRollableRowID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> OracleRollableRowID
    def to_json_data: () -> untyped
  end

  class OracleRollableRowIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> OracleRollableRowIDWildcard
    def to_json_data: () -> untyped
  end

  class OracleRollableRowText
    attr_accessor id: AnyOracleRollableRowID
    attr_accessor roll: DiceRange
    attr_accessor text: MarkdownString
    attr_accessor i18n: I18nHints?
    attr_accessor embed_table: OracleRollableID?
    attr_accessor icon: SvgImageURL?
    attr_accessor oracle_rolls: Array[OracleRoll]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?
    attr_accessor template: OracleRollTemplate?

    def self.from_json_data: (untyped) -> OracleRollableRowText
    def to_json_data: () -> untyped
  end

  class OracleRollableRowText2
    attr_accessor id: AnyOracleRollableRowID
    attr_accessor roll: DiceRange
    attr_accessor text: MarkdownString
    attr_accessor text2: MarkdownString
    attr_accessor i18n: I18nHints?
    attr_accessor embed_table: OracleRollableID?
    attr_accessor icon: SvgImageURL?
    attr_accessor oracle_rolls: Array[OracleRoll]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?
    attr_accessor template: OracleRollTemplate?

    def self.from_json_data: (untyped) -> OracleRollableRowText2
    def to_json_data: () -> untyped
  end

  class OracleRollableRowText3
    attr_accessor id: AnyOracleRollableRowID
    attr_accessor roll: DiceRange
    attr_accessor text: MarkdownString
    attr_accessor text2: MarkdownString
    attr_accessor text3: MarkdownString
    attr_accessor i18n: I18nHints?
    attr_accessor embed_table: OracleRollableID?
    attr_accessor icon: SvgImageURL?
    attr_accessor oracle_rolls: Array[OracleRoll]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?
    attr_accessor template: OracleRollTemplate?

    def self.from_json_data: (untyped) -> OracleRollableRowText3
    def to_json_data: () -> untyped
  end

  class OracleRollableTable
    attr_accessor oracle_type: String

    def self.from_json_data: (untyped) -> OracleRollableTable
    def to_json_data: () -> untyped
  end

  class OracleRollableTableTableTextColumnLabels
    attr_accessor roll: Label
    attr_accessor text: Label

    def self.from_json_data: (untyped) -> OracleRollableTableTableTextColumnLabels
    def to_json_data: () -> untyped
  end

  class OracleRollableTableTableTextType
    attr_accessor value: String

    ORACLE_ROLLABLE: OracleRollableTableTableTextType

    def self.from_json_data: (untyped) -> OracleRollableTableTableTextType
    def to_json_data: () -> untyped
  end

  class OracleRollableTableTableTextRecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> OracleRollableTableTableTextRecommendedRolls
    def to_json_data: () -> untyped
  end

  class OracleRollableTableTableText < OracleRollableTable
    attr_accessor id: OracleRollableID
    attr_accessor source: SourceInfo
    attr_accessor column_labels: OracleRollableTableTableTextColumnLabels
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor rows: Array[OracleRollableRowText]
    attr_accessor type: OracleRollableTableTableTextType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: OracleRollableTableTableTextRecommendedRolls?
    attr_accessor replaces: Array[OracleRollableIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleRollableTableTableText
    def to_json_data: () -> untyped
  end

  class OracleRollableTableTableText2ColumnLabels
    attr_accessor roll: Label
    attr_accessor text: Label
    attr_accessor text2: Label

    def self.from_json_data: (untyped) -> OracleRollableTableTableText2ColumnLabels
    def to_json_data: () -> untyped
  end

  class OracleRollableTableTableText2Type
    attr_accessor value: String

    ORACLE_ROLLABLE: OracleRollableTableTableText2Type

    def self.from_json_data: (untyped) -> OracleRollableTableTableText2Type
    def to_json_data: () -> untyped
  end

  class OracleRollableTableTableText2RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> OracleRollableTableTableText2RecommendedRolls
    def to_json_data: () -> untyped
  end

  class OracleRollableTableTableText2 < OracleRollableTable
    attr_accessor id: OracleRollableID
    attr_accessor source: SourceInfo
    attr_accessor column_labels: OracleRollableTableTableText2ColumnLabels
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor rows: Array[OracleRollableRowText2]
    attr_accessor type: OracleRollableTableTableText2Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: OracleRollableTableTableText2RecommendedRolls?
    attr_accessor replaces: Array[OracleRollableIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleRollableTableTableText2
    def to_json_data: () -> untyped
  end

  class OracleRollableTableTableText3ColumnLabels
    attr_accessor roll: Label
    attr_accessor text: Label
    attr_accessor text2: Label
    attr_accessor text3: Label

    def self.from_json_data: (untyped) -> OracleRollableTableTableText3ColumnLabels
    def to_json_data: () -> untyped
  end

  class OracleRollableTableTableText3Type
    attr_accessor value: String

    ORACLE_ROLLABLE: OracleRollableTableTableText3Type

    def self.from_json_data: (untyped) -> OracleRollableTableTableText3Type
    def to_json_data: () -> untyped
  end

  class OracleRollableTableTableText3RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> OracleRollableTableTableText3RecommendedRolls
    def to_json_data: () -> untyped
  end

  class OracleRollableTableTableText3 < OracleRollableTable
    attr_accessor id: OracleRollableID
    attr_accessor source: SourceInfo
    attr_accessor column_labels: OracleRollableTableTableText3ColumnLabels
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor rows: Array[OracleRollableRowText3]
    attr_accessor type: OracleRollableTableTableText3Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: OracleRollableTableTableText3RecommendedRolls?
    attr_accessor replaces: Array[OracleRollableIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleRollableTableTableText3
    def to_json_data: () -> untyped
  end

  class OracleTableSharedRollsColumnLabels
    attr_accessor roll: Label

    def self.from_json_data: (untyped) -> OracleTableSharedRollsColumnLabels
    def to_json_data: () -> untyped
  end

  class OracleTableSharedRollsOracleType
    attr_accessor value: String

    TABLE_SHARED_ROLLS: OracleTableSharedRollsOracleType

    def self.from_json_data: (untyped) -> OracleTableSharedRollsOracleType
    def to_json_data: () -> untyped
  end

  class OracleTableSharedRollsType
    attr_accessor value: String

    ORACLE_COLLECTION: OracleTableSharedRollsType

    def self.from_json_data: (untyped) -> OracleTableSharedRollsType
    def to_json_data: () -> untyped
  end

  class OracleTableSharedRolls
    attr_accessor id: OracleCollectionID
    attr_accessor source: SourceInfo
    attr_accessor column_labels: OracleTableSharedRollsColumnLabels
    attr_accessor contents: Hash[String, OracleColumnText]
    attr_accessor name: Label
    attr_accessor oracle_type: OracleTableSharedRollsOracleType
    attr_accessor type: OracleTableSharedRollsType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: Array[OracleCollectionIDWildcard]?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[OracleCollectionIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleTableSharedRolls
    def to_json_data: () -> untyped
  end

  class OracleTableSharedTextColumnLabels
    attr_accessor text: Label

    def self.from_json_data: (untyped) -> OracleTableSharedTextColumnLabels
    def to_json_data: () -> untyped
  end

  class OracleTableSharedTextOracleType
    attr_accessor value: String

    TABLE_SHARED_TEXT: OracleTableSharedTextOracleType

    def self.from_json_data: (untyped) -> OracleTableSharedTextOracleType
    def to_json_data: () -> untyped
  end

  class OracleTableSharedTextType
    attr_accessor value: String

    ORACLE_COLLECTION: OracleTableSharedTextType

    def self.from_json_data: (untyped) -> OracleTableSharedTextType
    def to_json_data: () -> untyped
  end

  class OracleTableSharedText
    attr_accessor id: OracleCollectionID
    attr_accessor source: SourceInfo
    attr_accessor column_labels: OracleTableSharedTextColumnLabels
    attr_accessor contents: Hash[String, OracleColumnText]
    attr_accessor name: Label
    attr_accessor oracle_type: OracleTableSharedTextOracleType
    attr_accessor type: OracleTableSharedTextType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: Array[OracleCollectionIDWildcard]?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[OracleCollectionIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleTableSharedText
    def to_json_data: () -> untyped
  end

  class OracleTableSharedText2ColumnLabels
    attr_accessor text: Label
    attr_accessor text2: Label

    def self.from_json_data: (untyped) -> OracleTableSharedText2ColumnLabels
    def to_json_data: () -> untyped
  end

  class OracleTableSharedText2OracleType
    attr_accessor value: String

    TABLE_SHARED_TEXT2: OracleTableSharedText2OracleType

    def self.from_json_data: (untyped) -> OracleTableSharedText2OracleType
    def to_json_data: () -> untyped
  end

  class OracleTableSharedText2Type
    attr_accessor value: String

    ORACLE_COLLECTION: OracleTableSharedText2Type

    def self.from_json_data: (untyped) -> OracleTableSharedText2Type
    def to_json_data: () -> untyped
  end

  class OracleTableSharedText2
    attr_accessor id: OracleCollectionID
    attr_accessor source: SourceInfo
    attr_accessor column_labels: OracleTableSharedText2ColumnLabels
    attr_accessor contents: Hash[String, OracleColumnText2]
    attr_accessor name: Label
    attr_accessor oracle_type: OracleTableSharedText2OracleType
    attr_accessor type: OracleTableSharedText2Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: Array[OracleCollectionIDWildcard]?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[OracleCollectionIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleTableSharedText2
    def to_json_data: () -> untyped
  end

  class OracleTableSharedText3ColumnLabels
    attr_accessor text: Label
    attr_accessor text2: Label
    attr_accessor text3: Label

    def self.from_json_data: (untyped) -> OracleTableSharedText3ColumnLabels
    def to_json_data: () -> untyped
  end

  class OracleTableSharedText3OracleType
    attr_accessor value: String

    TABLE_SHARED_TEXT3: OracleTableSharedText3OracleType

    def self.from_json_data: (untyped) -> OracleTableSharedText3OracleType
    def to_json_data: () -> untyped
  end

  class OracleTableSharedText3Type
    attr_accessor value: String

    ORACLE_COLLECTION: OracleTableSharedText3Type

    def self.from_json_data: (untyped) -> OracleTableSharedText3Type
    def to_json_data: () -> untyped
  end

  class OracleTableSharedText3
    attr_accessor id: OracleCollectionID
    attr_accessor source: SourceInfo
    attr_accessor column_labels: OracleTableSharedText3ColumnLabels
    attr_accessor contents: Hash[String, OracleColumnText3]
    attr_accessor name: Label
    attr_accessor oracle_type: OracleTableSharedText3OracleType
    attr_accessor type: OracleTableSharedText3Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: Array[OracleCollectionIDWildcard]?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[OracleCollectionIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleTableSharedText3
    def to_json_data: () -> untyped
  end

  class OracleTableTextColumnLabels
    attr_accessor roll: Label
    attr_accessor text: Label

    def self.from_json_data: (untyped) -> OracleTableTextColumnLabels
    def to_json_data: () -> untyped
  end

  class OracleTableTextOracleType
    attr_accessor value: String

    TABLE_TEXT: OracleTableTextOracleType

    def self.from_json_data: (untyped) -> OracleTableTextOracleType
    def to_json_data: () -> untyped
  end

  class OracleTableTextType
    attr_accessor value: String

    ORACLE_ROLLABLE: OracleTableTextType

    def self.from_json_data: (untyped) -> OracleTableTextType
    def to_json_data: () -> untyped
  end

  class OracleTableTextRecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> OracleTableTextRecommendedRolls
    def to_json_data: () -> untyped
  end

  class OracleTableText
    attr_accessor id: OracleRollableID
    attr_accessor source: SourceInfo
    attr_accessor column_labels: OracleTableTextColumnLabels
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor oracle_type: OracleTableTextOracleType
    attr_accessor rows: Array[OracleRollableRowText]
    attr_accessor type: OracleTableTextType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: OracleTableTextRecommendedRolls?
    attr_accessor replaces: Array[OracleRollableIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleTableText
    def to_json_data: () -> untyped
  end

  class OracleTableText2ColumnLabels
    attr_accessor roll: Label
    attr_accessor text: Label
    attr_accessor text2: Label

    def self.from_json_data: (untyped) -> OracleTableText2ColumnLabels
    def to_json_data: () -> untyped
  end

  class OracleTableText2OracleType
    attr_accessor value: String

    TABLE_TEXT2: OracleTableText2OracleType

    def self.from_json_data: (untyped) -> OracleTableText2OracleType
    def to_json_data: () -> untyped
  end

  class OracleTableText2Type
    attr_accessor value: String

    ORACLE_ROLLABLE: OracleTableText2Type

    def self.from_json_data: (untyped) -> OracleTableText2Type
    def to_json_data: () -> untyped
  end

  class OracleTableText2RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> OracleTableText2RecommendedRolls
    def to_json_data: () -> untyped
  end

  class OracleTableText2
    attr_accessor id: OracleRollableID
    attr_accessor source: SourceInfo
    attr_accessor column_labels: OracleTableText2ColumnLabels
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor oracle_type: OracleTableText2OracleType
    attr_accessor rows: Array[OracleRollableRowText2]
    attr_accessor type: OracleTableText2Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: OracleTableText2RecommendedRolls?
    attr_accessor replaces: Array[OracleRollableIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleTableText2
    def to_json_data: () -> untyped
  end

  class OracleTableText3ColumnLabels
    attr_accessor roll: Label
    attr_accessor text: Label
    attr_accessor text2: Label
    attr_accessor text3: Label

    def self.from_json_data: (untyped) -> OracleTableText3ColumnLabels
    def to_json_data: () -> untyped
  end

  class OracleTableText3OracleType
    attr_accessor value: String

    TABLE_TEXT3: OracleTableText3OracleType

    def self.from_json_data: (untyped) -> OracleTableText3OracleType
    def to_json_data: () -> untyped
  end

  class OracleTableText3Type
    attr_accessor value: String

    ORACLE_ROLLABLE: OracleTableText3Type

    def self.from_json_data: (untyped) -> OracleTableText3Type
    def to_json_data: () -> untyped
  end

  class OracleTableText3RecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> OracleTableText3RecommendedRolls
    def to_json_data: () -> untyped
  end

  class OracleTableText3
    attr_accessor id: OracleRollableID
    attr_accessor source: SourceInfo
    attr_accessor column_labels: OracleTableText3ColumnLabels
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor oracle_type: OracleTableText3OracleType
    attr_accessor rows: Array[OracleRollableRowText3]
    attr_accessor type: OracleTableText3Type
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleMatchBehavior?
    attr_accessor recommended_rolls: OracleTableText3RecommendedRolls?
    attr_accessor replaces: Array[OracleRollableIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleTableText3
    def to_json_data: () -> untyped
  end

  class OracleTablesCollectionOracleType
    attr_accessor value: String

    TABLES: OracleTablesCollectionOracleType

    def self.from_json_data: (untyped) -> OracleTablesCollectionOracleType
    def to_json_data: () -> untyped
  end

  class OracleTablesCollectionType
    attr_accessor value: String

    ORACLE_COLLECTION: OracleTablesCollectionType

    def self.from_json_data: (untyped) -> OracleTablesCollectionType
    def to_json_data: () -> untyped
  end

  class OracleTablesCollection
    attr_accessor id: OracleCollectionID
    attr_accessor source: SourceInfo
    attr_accessor collections: Hash[String, OracleCollection]
    attr_accessor contents: Hash[String, OracleRollableTable]
    attr_accessor name: Label
    attr_accessor oracle_type: OracleTablesCollectionOracleType
    attr_accessor type: OracleTablesCollectionType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: Array[OracleCollectionIDWildcard]?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[OracleCollectionIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> OracleTablesCollection
    def to_json_data: () -> untyped
  end

  class PageNumber
    attr_accessor value: Integer

    def self.from_json_data: (untyped) -> PageNumber
    def to_json_data: () -> untyped
  end

  class PartOfSpeech
    attr_accessor value: String

    ADJECTIVE: PartOfSpeech
    ADJECTIVE_AS_PROPER_NOUN: PartOfSpeech
    ADJUNCT_COMMON_NOUN: PartOfSpeech
    ADJUNCT_PROPER_NOUN: PartOfSpeech
    ATTRIBUTIVE_VERB: PartOfSpeech
    COMMON_NOUN: PartOfSpeech
    COMMON_NOUN_AS_PROPER_NOUN: PartOfSpeech
    GERUND: PartOfSpeech
    PROPER_NOUN: PartOfSpeech
    VERB: PartOfSpeech

    def self.from_json_data: (untyped) -> PartOfSpeech
    def to_json_data: () -> untyped
  end

  class ProgressRollMethod
    attr_accessor value: String

    MISS: ProgressRollMethod
    PROGRESS_ROLL: ProgressRollMethod
    STRONG_HIT: ProgressRollMethod
    WEAK_HIT: ProgressRollMethod

    def self.from_json_data: (untyped) -> ProgressRollMethod
    def to_json_data: () -> untyped
  end

  class ProgressRollOptionUsing
    attr_accessor value: String

    PROGRESS_TRACK: ProgressRollOptionUsing

    def self.from_json_data: (untyped) -> ProgressRollOptionUsing
    def to_json_data: () -> untyped
  end

  class ProgressRollOption
    attr_accessor using: ProgressRollOptionUsing

    def self.from_json_data: (untyped) -> ProgressRollOption
    def to_json_data: () -> untyped
  end

  class ProgressTrackTypeInfo
    attr_accessor category: Label
    attr_accessor controls: Hash[String, untyped]?

    def self.from_json_data: (untyped) -> ProgressTrackTypeInfo
    def to_json_data: () -> untyped
  end

  class RarityType
    attr_accessor value: String

    RARITY: RarityType

    def self.from_json_data: (untyped) -> RarityType
    def to_json_data: () -> untyped
  end

  class Rarity
    attr_accessor id: RarityID
    attr_accessor source: SourceInfo
    attr_accessor asset: AssetID
    attr_accessor name: Label
    attr_accessor type: RarityType
    attr_accessor xp_cost: Integer
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[RarityIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?

    def self.from_json_data: (untyped) -> Rarity
    def to_json_data: () -> untyped
  end

  class RarityID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> RarityID
    def to_json_data: () -> untyped
  end

  class RarityIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> RarityIDWildcard
    def to_json_data: () -> untyped
  end

  class RollableValue
    attr_accessor using: String

    def self.from_json_data: (untyped) -> RollableValue
    def to_json_data: () -> untyped
  end

  class RollableValueAssetControl < RollableValue
    attr_accessor assets: Array[AssetIDWildcard]
    attr_accessor control: DictKey

    def self.from_json_data: (untyped) -> RollableValueAssetControl
    def to_json_data: () -> untyped
  end

  class RollableValueAssetOption < RollableValue
    attr_accessor assets: Array[AssetIDWildcard]
    attr_accessor option: DictKey

    def self.from_json_data: (untyped) -> RollableValueAssetOption
    def to_json_data: () -> untyped
  end

  class RollableValueAttachedAssetControl < RollableValue
    attr_accessor control: DictKey

    def self.from_json_data: (untyped) -> RollableValueAttachedAssetControl
    def to_json_data: () -> untyped
  end

  class RollableValueAttachedAssetOption < RollableValue
    attr_accessor option: DictKey

    def self.from_json_data: (untyped) -> RollableValueAttachedAssetOption
    def to_json_data: () -> untyped
  end

  class RollableValueConditionMeter < RollableValue
    attr_accessor condition_meter: ConditionMeterKey

    def self.from_json_data: (untyped) -> RollableValueConditionMeter
    def to_json_data: () -> untyped
  end

  class RollableValueCustom < RollableValue
    attr_accessor label: Label
    attr_accessor value: Integer

    def self.from_json_data: (untyped) -> RollableValueCustom
    def to_json_data: () -> untyped
  end

  class RollableValueStat < RollableValue
    attr_accessor stat: StatKey

    def self.from_json_data: (untyped) -> RollableValueStat
    def to_json_data: () -> untyped
  end

  class Rules
    attr_accessor condition_meters: Hash[String, ConditionMeterRule]
    attr_accessor impacts: Hash[String, ImpactCategory]
    attr_accessor special_tracks: Hash[String, SpecialTrackRule]
    attr_accessor stats: Hash[String, StatRule]
    attr_accessor tags: Hash[String, TagRule]

    def self.from_json_data: (untyped) -> Rules
    def to_json_data: () -> untyped
  end

  class RulesExpansion
    attr_accessor condition_meters: Hash[String, ConditionMeterRule]?
    attr_accessor impacts: Hash[String, ImpactCategory]?
    attr_accessor special_tracks: Hash[String, SpecialTrackRule]?
    attr_accessor stats: Hash[String, StatRule]?
    attr_accessor tags: Hash[String, TagRule]?

    def self.from_json_data: (untyped) -> RulesExpansion
    def to_json_data: () -> untyped
  end

  class RulesPackageID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> RulesPackageID
    def to_json_data: () -> untyped
  end

  class RulesetDataswornVersion
    attr_accessor value: String

    DEFAULT_NAME: RulesetDataswornVersion

    def self.from_json_data: (untyped) -> RulesetDataswornVersion
    def to_json_data: () -> untyped
  end

  class RulesetType
    attr_accessor value: String

    RULESET: RulesetType

    def self.from_json_data: (untyped) -> RulesetType
    def to_json_data: () -> untyped
  end

  class Ruleset
    attr_accessor id: RulesetID
    attr_accessor assets: Hash[String, AssetCollection]
    attr_accessor authors: Array[AuthorInfo]
    attr_accessor datasworn_version: RulesetDataswornVersion
    attr_accessor date: DateTime
    attr_accessor license: WebURL
    attr_accessor moves: Hash[String, MoveCategory]
    attr_accessor oracles: Hash[String, OracleTablesCollection]
    attr_accessor rules: Rules
    attr_accessor title: Label
    attr_accessor type: RulesetType
    attr_accessor url: WebURL
    attr_accessor atlas: Hash[String, AtlasCollection]?
    attr_accessor delve_sites: Hash[String, DelveSite]?
    attr_accessor description: MarkdownString?
    attr_accessor npcs: Hash[String, NpcCollection]?
    attr_accessor rarities: Hash[String, Rarity]?
    attr_accessor site_domains: Hash[String, DelveSiteDomain]?
    attr_accessor site_themes: Hash[String, DelveSiteTheme]?
    attr_accessor truths: Hash[String, Truth]?

    def self.from_json_data: (untyped) -> Ruleset
    def to_json_data: () -> untyped
  end

  class RulesetID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> RulesetID
    def to_json_data: () -> untyped
  end

  class SelectEnhancementFieldChoice0
    attr_accessor choice_type: String

    def self.from_json_data: (untyped) -> SelectEnhancementFieldChoice0
    def to_json_data: () -> untyped
  end

  class SelectEnhancementFieldChoiceChoice < SelectEnhancementFieldChoice0
    attr_accessor label: Label
    attr_accessor enhance_asset: AssetEnhancement?
    attr_accessor enhance_moves: Array[MoveEnhancement]?

    def self.from_json_data: (untyped) -> SelectEnhancementFieldChoiceChoice
    def to_json_data: () -> untyped
  end

  class SelectEnhancementFieldChoiceChoiceGroup < SelectEnhancementFieldChoice0
    attr_accessor choices: Hash[String, SelectEnhancementFieldChoice]
    attr_accessor name: Label

    def self.from_json_data: (untyped) -> SelectEnhancementFieldChoiceChoiceGroup
    def to_json_data: () -> untyped
  end

  class SelectEnhancementFieldFieldType
    attr_accessor value: String

    SELECT_ENHANCEMENT: SelectEnhancementFieldFieldType

    def self.from_json_data: (untyped) -> SelectEnhancementFieldFieldType
    def to_json_data: () -> untyped
  end

  class SelectEnhancementField
    attr_accessor choices: Hash[String, SelectEnhancementFieldChoice0]
    attr_accessor field_type: SelectEnhancementFieldFieldType
    attr_accessor label: Label
    attr_accessor value: DictKey
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> SelectEnhancementField
    def to_json_data: () -> untyped
  end

  class SelectEnhancementFieldChoiceChoiceType
    attr_accessor value: String

    CHOICE: SelectEnhancementFieldChoiceChoiceType

    def self.from_json_data: (untyped) -> SelectEnhancementFieldChoiceChoiceType
    def to_json_data: () -> untyped
  end

  class SelectEnhancementFieldChoice
    attr_accessor choice_type: SelectEnhancementFieldChoiceChoiceType
    attr_accessor label: Label
    attr_accessor enhance_asset: AssetEnhancement?
    attr_accessor enhance_moves: Array[MoveEnhancement]?

    def self.from_json_data: (untyped) -> SelectEnhancementFieldChoice
    def to_json_data: () -> untyped
  end

  class SelectEnhancementFieldChoiceGroupChoiceType
    attr_accessor value: String

    CHOICE_GROUP: SelectEnhancementFieldChoiceGroupChoiceType

    def self.from_json_data: (untyped) -> SelectEnhancementFieldChoiceGroupChoiceType
    def to_json_data: () -> untyped
  end

  class SelectEnhancementFieldChoiceGroup
    attr_accessor choice_type: SelectEnhancementFieldChoiceGroupChoiceType
    attr_accessor choices: Hash[String, SelectEnhancementFieldChoice]
    attr_accessor name: Label

    def self.from_json_data: (untyped) -> SelectEnhancementFieldChoiceGroup
    def to_json_data: () -> untyped
  end

  class SelectValueFieldFieldType
    attr_accessor value: String

    SELECT_VALUE: SelectValueFieldFieldType

    def self.from_json_data: (untyped) -> SelectValueFieldFieldType
    def to_json_data: () -> untyped
  end

  class SelectValueField
    attr_accessor choices: Hash[String, SelectValueFieldChoice]
    attr_accessor field_type: SelectValueFieldFieldType
    attr_accessor label: Label
    attr_accessor value: DictKey
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> SelectValueField
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoice
    attr_accessor using: String

    def self.from_json_data: (untyped) -> SelectValueFieldChoice
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceAssetControlChoiceType
    attr_accessor value: String

    CHOICE: SelectValueFieldChoiceAssetControlChoiceType

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceAssetControlChoiceType
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceAssetControl < SelectValueFieldChoice
    attr_accessor assets: Array[AssetIDWildcard]
    attr_accessor choice_type: SelectValueFieldChoiceAssetControlChoiceType
    attr_accessor control: DictKey
    attr_accessor label: Label

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceAssetControl
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceAssetOptionChoiceType
    attr_accessor value: String

    CHOICE: SelectValueFieldChoiceAssetOptionChoiceType

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceAssetOptionChoiceType
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceAssetOption < SelectValueFieldChoice
    attr_accessor assets: Array[AssetIDWildcard]
    attr_accessor choice_type: SelectValueFieldChoiceAssetOptionChoiceType
    attr_accessor label: Label
    attr_accessor option: DictKey

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceAssetOption
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceAttachedAssetControlChoiceType
    attr_accessor value: String

    CHOICE: SelectValueFieldChoiceAttachedAssetControlChoiceType

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceAttachedAssetControlChoiceType
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceAttachedAssetControl < SelectValueFieldChoice
    attr_accessor choice_type: SelectValueFieldChoiceAttachedAssetControlChoiceType
    attr_accessor control: DictKey
    attr_accessor label: Label

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceAttachedAssetControl
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceAttachedAssetOptionChoiceType
    attr_accessor value: String

    CHOICE: SelectValueFieldChoiceAttachedAssetOptionChoiceType

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceAttachedAssetOptionChoiceType
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceAttachedAssetOption < SelectValueFieldChoice
    attr_accessor choice_type: SelectValueFieldChoiceAttachedAssetOptionChoiceType
    attr_accessor label: Label
    attr_accessor option: DictKey

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceAttachedAssetOption
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceConditionMeterChoiceType
    attr_accessor value: String

    CHOICE: SelectValueFieldChoiceConditionMeterChoiceType

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceConditionMeterChoiceType
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceConditionMeter < SelectValueFieldChoice
    attr_accessor choice_type: SelectValueFieldChoiceConditionMeterChoiceType
    attr_accessor condition_meter: ConditionMeterKey
    attr_accessor label: Label

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceConditionMeter
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceCustomChoiceType
    attr_accessor value: String

    CHOICE: SelectValueFieldChoiceCustomChoiceType

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceCustomChoiceType
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceCustom < SelectValueFieldChoice
    attr_accessor choice_type: SelectValueFieldChoiceCustomChoiceType
    attr_accessor label: Label
    attr_accessor value: Integer

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceCustom
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceStatChoiceType
    attr_accessor value: String

    CHOICE: SelectValueFieldChoiceStatChoiceType

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceStatChoiceType
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceStat < SelectValueFieldChoice
    attr_accessor choice_type: SelectValueFieldChoiceStatChoiceType
    attr_accessor label: Label
    attr_accessor stat: StatKey

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceStat
    def to_json_data: () -> untyped
  end

  class SemanticVersion
    attr_accessor value: String

    def self.from_json_data: (untyped) -> SemanticVersion
    def to_json_data: () -> untyped
  end

  class SourceInfo
    attr_accessor authors: Array[AuthorInfo]
    attr_accessor date: DateTime
    attr_accessor license: WebURL
    attr_accessor title: Label
    attr_accessor url: WebURL
    attr_accessor page: PageNumber?

    def self.from_json_data: (untyped) -> SourceInfo
    def to_json_data: () -> untyped
  end

  class SpecialTrackRollMethod
    attr_accessor value: String

    ALL: SpecialTrackRollMethod
    HIGHEST: SpecialTrackRollMethod
    LOWEST: SpecialTrackRollMethod
    MISS: SpecialTrackRollMethod
    PLAYER_CHOICE: SpecialTrackRollMethod
    STRONG_HIT: SpecialTrackRollMethod
    WEAK_HIT: SpecialTrackRollMethod

    def self.from_json_data: (untyped) -> SpecialTrackRollMethod
    def to_json_data: () -> untyped
  end

  class SpecialTrackRule
    attr_accessor description: MarkdownString
    attr_accessor label: Label
    attr_accessor optional: bool
    attr_accessor shared: bool

    def self.from_json_data: (untyped) -> SpecialTrackRule
    def to_json_data: () -> untyped
  end

  class SpecialTrackType
    attr_accessor value: DictKey

    def self.from_json_data: (untyped) -> SpecialTrackType
    def to_json_data: () -> untyped
  end

  class StatKey
    attr_accessor value: DictKey

    def self.from_json_data: (untyped) -> StatKey
    def to_json_data: () -> untyped
  end

  class StatRule
    attr_accessor description: MarkdownString
    attr_accessor label: Label

    def self.from_json_data: (untyped) -> StatRule
    def to_json_data: () -> untyped
  end

  class StatValueRefUsing
    attr_accessor value: String

    STAT: StatValueRefUsing

    def self.from_json_data: (untyped) -> StatValueRefUsing
    def to_json_data: () -> untyped
  end

  class StatValueRef
    attr_accessor stat: StatKey
    attr_accessor using: StatValueRefUsing

    def self.from_json_data: (untyped) -> StatValueRef
    def to_json_data: () -> untyped
  end

  class Suggestions
    attr_accessor value: Array[AnyIDWildcard]

    def self.from_json_data: (untyped) -> Suggestions
    def to_json_data: () -> untyped
  end

  class SvgImageURL
    attr_accessor value: String

    def self.from_json_data: (untyped) -> SvgImageURL
    def to_json_data: () -> untyped
  end

  class Tag
    attr_accessor value: untyped

    def self.from_json_data: (untyped) -> Tag
    def to_json_data: () -> untyped
  end

  class TagRule
    attr_accessor schema: TagSchema
    attr_accessor node_types: Array[TaggableNodeType]

    def self.from_json_data: (untyped) -> TagRule
    def to_json_data: () -> untyped
  end

  class TagSchema
    attr_accessor value: untyped

    def self.from_json_data: (untyped) -> TagSchema
    def to_json_data: () -> untyped
  end

  class TaggableNodeType
    attr_accessor value: String

    ABILITY: TaggableNodeType
    ASSET: TaggableNodeType
    ASSET_COLLECTION: TaggableNodeType
    ATLAS_COLLECTION: TaggableNodeType
    ATLAS_ENTRY: TaggableNodeType
    DANGER: TaggableNodeType
    DELVE_SITE: TaggableNodeType
    DELVE_SITE_DOMAIN: TaggableNodeType
    DELVE_SITE_THEME: TaggableNodeType
    DENIZEN: TaggableNodeType
    FEATURE: TaggableNodeType
    MOVE: TaggableNodeType
    MOVE_CATEGORY: TaggableNodeType
    NPC: TaggableNodeType
    NPC_COLLECTION: TaggableNodeType
    OPTION: TaggableNodeType
    ORACLE_COLLECTION: TaggableNodeType
    ORACLE_ROLLABLE: TaggableNodeType
    RARITY: TaggableNodeType
    ROW: TaggableNodeType
    TRUTH: TaggableNodeType
    VARIANT: TaggableNodeType

    def self.from_json_data: (untyped) -> TaggableNodeType
    def to_json_data: () -> untyped
  end

  class Tags
    attr_accessor value: Hash[String, Hash[String, Tag]]

    def self.from_json_data: (untyped) -> Tags
    def to_json_data: () -> untyped
  end

  class TextFieldFieldType
    attr_accessor value: String

    TEXT: TextFieldFieldType

    def self.from_json_data: (untyped) -> TextFieldFieldType
    def to_json_data: () -> untyped
  end

  class TextField
    attr_accessor field_type: TextFieldFieldType
    attr_accessor label: Label
    attr_accessor value: String
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> TextField
    def to_json_data: () -> untyped
  end

  class TriggerActionRoll
    attr_accessor conditions: Array[TriggerActionRollCondition]
    attr_accessor text: MarkdownString

    def self.from_json_data: (untyped) -> TriggerActionRoll
    def to_json_data: () -> untyped
  end

  class TriggerActionRollCondition
    attr_accessor method: ActionRollMethod
    attr_accessor roll_options: Array[RollableValue]
    attr_accessor by: TriggerBy?
    attr_accessor text: MarkdownString?

    def self.from_json_data: (untyped) -> TriggerActionRollCondition
    def to_json_data: () -> untyped
  end

  class TriggerActionRollConditionEnhancement
    attr_accessor method: ActionRollMethod
    attr_accessor roll_options: Array[RollableValue]
    attr_accessor by: TriggerBy?
    attr_accessor text: MarkdownString?

    def self.from_json_data: (untyped) -> TriggerActionRollConditionEnhancement
    def to_json_data: () -> untyped
  end

  class TriggerActionRollEnhancement
    attr_accessor conditions: Array[TriggerActionRollConditionEnhancement]

    def self.from_json_data: (untyped) -> TriggerActionRollEnhancement
    def to_json_data: () -> untyped
  end

  class TriggerBy
    attr_accessor ally: bool
    attr_accessor player: bool

    def self.from_json_data: (untyped) -> TriggerBy
    def to_json_data: () -> untyped
  end

  class TriggerNoRoll
    attr_accessor conditions: Array[TriggerNoRollCondition]
    attr_accessor text: MarkdownString

    def self.from_json_data: (untyped) -> TriggerNoRoll
    def to_json_data: () -> untyped
  end

  class TriggerNoRollCondition
    attr_accessor by: TriggerBy?
    attr_accessor text: MarkdownString?

    def self.from_json_data: (untyped) -> TriggerNoRollCondition
    def to_json_data: () -> untyped
  end

  class TriggerNoRollEnhancement
    attr_accessor conditions: Array[TriggerNoRollCondition]

    def self.from_json_data: (untyped) -> TriggerNoRollEnhancement
    def to_json_data: () -> untyped
  end

  class TriggerProgressRoll
    attr_accessor conditions: Array[TriggerProgressRollCondition]
    attr_accessor text: MarkdownString

    def self.from_json_data: (untyped) -> TriggerProgressRoll
    def to_json_data: () -> untyped
  end

  class TriggerProgressRollCondition
    attr_accessor method: ProgressRollMethod
    attr_accessor roll_options: Array[ProgressRollOption]
    attr_accessor by: TriggerBy?
    attr_accessor text: MarkdownString?

    def self.from_json_data: (untyped) -> TriggerProgressRollCondition
    def to_json_data: () -> untyped
  end

  class TriggerProgressRollConditionEnhancement
    attr_accessor method: ProgressRollMethod
    attr_accessor roll_options: Array[ProgressRollOption]
    attr_accessor by: TriggerBy?
    attr_accessor text: MarkdownString?

    def self.from_json_data: (untyped) -> TriggerProgressRollConditionEnhancement
    def to_json_data: () -> untyped
  end

  class TriggerProgressRollEnhancement
    attr_accessor conditions: Array[TriggerProgressRollConditionEnhancement]

    def self.from_json_data: (untyped) -> TriggerProgressRollEnhancement
    def to_json_data: () -> untyped
  end

  class TriggerSpecialTrack
    attr_accessor conditions: Array[TriggerSpecialTrackCondition]
    attr_accessor text: MarkdownString

    def self.from_json_data: (untyped) -> TriggerSpecialTrack
    def to_json_data: () -> untyped
  end

  class TriggerSpecialTrackCondition
    attr_accessor method: SpecialTrackRollMethod
    attr_accessor roll_options: Array[TriggerSpecialTrackConditionOption]
    attr_accessor by: TriggerBy?
    attr_accessor text: MarkdownString?

    def self.from_json_data: (untyped) -> TriggerSpecialTrackCondition
    def to_json_data: () -> untyped
  end

  class TriggerSpecialTrackConditionEnhancement
    attr_accessor method: SpecialTrackRollMethod
    attr_accessor roll_options: Array[TriggerSpecialTrackConditionOption]
    attr_accessor by: TriggerBy?
    attr_accessor text: MarkdownString?

    def self.from_json_data: (untyped) -> TriggerSpecialTrackConditionEnhancement
    def to_json_data: () -> untyped
  end

  class TriggerSpecialTrackConditionOption
    attr_accessor using: SpecialTrackType

    def self.from_json_data: (untyped) -> TriggerSpecialTrackConditionOption
    def to_json_data: () -> untyped
  end

  class TriggerSpecialTrackEnhancement
    attr_accessor conditions: Array[TriggerSpecialTrackConditionEnhancement]

    def self.from_json_data: (untyped) -> TriggerSpecialTrackEnhancement
    def to_json_data: () -> untyped
  end

  class TruthType
    attr_accessor value: String

    TRUTH: TruthType

    def self.from_json_data: (untyped) -> TruthType
    def to_json_data: () -> untyped
  end

  class Truth
    attr_accessor id: TruthID
    attr_accessor source: SourceInfo
    attr_accessor dice: DiceExpression
    attr_accessor name: Label
    attr_accessor options: Array[TruthOption]
    attr_accessor type: TruthType
    attr_accessor comment: Documentation?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor factions: Array[EntityPrompt]?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: Array[TruthIDWildcard]?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Tags?
    attr_accessor your_character: MarkdownString?

    def self.from_json_data: (untyped) -> Truth
    def to_json_data: () -> untyped
  end

  class TruthID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> TruthID
    def to_json_data: () -> untyped
  end

  class TruthIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> TruthIDWildcard
    def to_json_data: () -> untyped
  end

  class TruthOption
    attr_accessor id: TruthOptionID
    attr_accessor description: MarkdownString
    attr_accessor quest_starter: MarkdownString
    attr_accessor roll: DiceRange
    attr_accessor comment: Documentation?
    attr_accessor oracles: Hash[String, EmbeddedOracleRollable]?
    attr_accessor summary: MarkdownString?

    def self.from_json_data: (untyped) -> TruthOption
    def to_json_data: () -> untyped
  end

  class TruthOptionID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> TruthOptionID
    def to_json_data: () -> untyped
  end

  class TruthOptionIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> TruthOptionIDWildcard
    def to_json_data: () -> untyped
  end

  class TruthOptionOracleRollableID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> TruthOptionOracleRollableID
    def to_json_data: () -> untyped
  end

  class TruthOptionOracleRollableIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> TruthOptionOracleRollableIDWildcard
    def to_json_data: () -> untyped
  end

  class TruthOptionOracleRollableRowID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> TruthOptionOracleRollableRowID
    def to_json_data: () -> untyped
  end

  class TruthOptionOracleRollableRowIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> TruthOptionOracleRollableRowIDWildcard
    def to_json_data: () -> untyped
  end

  class WebURL
    attr_accessor value: String

    def self.from_json_data: (untyped) -> WebURL
    def to_json_data: () -> untyped
  end

  class WebpImageURL
    attr_accessor value: String

    def self.from_json_data: (untyped) -> WebpImageURL
    def to_json_data: () -> untyped
  end

  def self.from_json_data: (untyped, untyped) -> untyped
  def self.to_json_data: (untyped) -> untyped
end
